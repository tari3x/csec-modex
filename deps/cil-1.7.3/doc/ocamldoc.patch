diff -cb ocamldoc-orig/configure.in ocamldoc/configure.in
*** ocamldoc-orig/configure.in	Fri Oct  5 13:15:45 2001
--- ocamldoc/configure.in	Sat Oct 20 13:04:20 2001
***************
*** 44,50 ****
  else
  	AC_MSG_CHECKING(ocamlopt version)
  	TMPVERSION=`$OCAMLOPT -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
! 	if test "$TMPVERSION" != $OCAMLVERSION ; then
  	    AC_MSG_RESULT(differs from ocamlc; ocamlopt discarded.)
  	    OCAMLOPT=no
  	else
--- 44,50 ----
  else
  	AC_MSG_CHECKING(ocamlopt version)
  	TMPVERSION=`$OCAMLOPT -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
! 	if test "$TMPVERSION" != "$OCAMLVERSION" ; then
  	    AC_MSG_RESULT(differs from ocamlc; ocamlopt discarded.)
  	    OCAMLOPT=no
  	else
***************
*** 58,64 ****
  if test "$OCAMLCDOTOPT" != no ; then
  	AC_MSG_CHECKING(ocamlc.opt version)
  	TMPVERSION=`$OCAMLCDOTOPT -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
! 	if test "$TMPVERSION" != $OCAMLVERSION ; then
  	    AC_MSG_RESULT(differs from ocamlc; ocamlc.opt discarded.)
  	else
  	    AC_MSG_RESULT(ok)
--- 58,64 ----
  if test "$OCAMLCDOTOPT" != no ; then
  	AC_MSG_CHECKING(ocamlc.opt version)
  	TMPVERSION=`$OCAMLCDOTOPT -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
! 	if test "$TMPVERSION" != "$OCAMLVERSION" ; then
  	    AC_MSG_RESULT(differs from ocamlc; ocamlc.opt discarded.)
  	else
  	    AC_MSG_RESULT(ok)
***************
*** 72,78 ****
      if test "$OCAMLOPTDOTOPT" != no ; then
  	AC_MSG_CHECKING(ocamlc.opt version)
  	TMPVER=`$OCAMLOPTDOTOPT -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
! 	if test "$TMPVER" != $OCAMLVERSION ; then
  	    AC_MSG_RESULT(differs from ocamlc; ocamlopt.opt discarded.)
  	else
  	    AC_MSG_RESULT(ok)
--- 72,78 ----
      if test "$OCAMLOPTDOTOPT" != no ; then
  	AC_MSG_CHECKING(ocamlc.opt version)
  	TMPVER=`$OCAMLOPTDOTOPT -v | sed -n -e 's|.*version* *\(.*\)$|\1|p' `
! 	if test "$TMPVER" != "$OCAMLVERSION" ; then
  	    AC_MSG_RESULT(differs from ocamlc; ocamlopt.opt discarded.)
  	else
  	    AC_MSG_RESULT(ok)
diff -cb ocamldoc-orig/odoc_html.ml ocamldoc/odoc_html.ml
*** ocamldoc-orig/odoc_html.ml	Mon Oct  8 08:32:51 2001
--- ocamldoc/odoc_html.ml	Sun Oct 21 01:11:24 2001
***************
*** 218,223 ****
--- 218,237 ----
      val mutable constructor_color = "SlateBlue"
  
  
+     (* sm: utility to get toplevel title string *)
+     method topTitle () : string = (
+       match !Odoc_args.title with
+         None -> ""
+       | Some t -> Text.escape t
+     )
+ 
+     (* sm: title of something below the toplevel *)
+     method innerTitle (s:string) : string = (
+       match !Odoc_args.title with
+         None -> s
+       | Some t -> (Text.escape t) ^ ": " ^ s
+     )
+ 
      (** Return html code with the given string in the keyword color.*)
      method keyword s = "<FONT COLOR=\""^keyword_color^"\">"^s^"</FONT>"
  
***************
*** 967,972 ****
--- 981,987 ----
  	   style^
  	   "<HEAD>\n"^
  	   "<TITLE>\n"^
+ 	   (self#innerTitle cl.cl_name)^
  	   "</TITLE>\n"^
  	   "</HEAD>\n"^
  	   "<BODY BGCOLOR=\"white\">\n"^
***************
*** 1010,1015 ****
--- 1025,1031 ----
  	   style^
  	   "<HEAD>\n"^
  	   "<TITLE>\n"^
+ 	   (self#innerTitle clt.clt_name)^
  	   "</TITLE>\n"^
  	   "</HEAD>\n"^
  	   "<BODY BGCOLOR=\"white\">\n"^
***************
*** 1053,1058 ****
--- 1069,1075 ----
  	   style^
  	   "<HEAD>\n"^
  	   "<TITLE>\n"^
+ 	   (self#innerTitle mt.mt_name)^
  	   "</TITLE>\n"^
  	   "</HEAD>\n"^
  	   "<BODY BGCOLOR=\"white\">\n"^
***************
*** 1132,1137 ****
--- 1149,1155 ----
  	   style^
  	   "<HEAD>\n"^
  	   "<TITLE>\n"^
+ 	   (self#innerTitle modu.m_name)^
  	   "</TITLE>\n"^
  	   "</HEAD>\n"^
  	   "<BODY BGCOLOR=\"white\">\n"^
***************
*** 1204,1214 ****
      method generate_index module_list =
        try
  	let chanout = open_out (Filename.concat !Odoc_args.target_dir "index.html") in
! 	let t = 
! 	  match !Odoc_args.title with
! 	    None -> ""
! 	  | Some t -> Text.escape t
! 	in
  	output_string chanout 
  	  (
  	   "<HTML>\n"^
--- 1222,1228 ----
      method generate_index module_list =
        try
  	let chanout = open_out (Filename.concat !Odoc_args.target_dir "index.html") in
! 	let t = (self#topTitle ()) in
  	output_string chanout
  	  (
  	   "<HTML>\n"^
