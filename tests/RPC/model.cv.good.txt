
channel c_in, c_out.

param N.

type nondet [fixed].

(********************
Misc
********************)

type bounded_2000_request.
type bounded_2000_response.

(********************
MAC
********************)

type bounded_100_mkeyseed [fixed, large].
type bounded_100_mkey [bounded].
type macinput.
(* type macres. *)
proba Pmac.

expand UF_CMA_mac(bounded_100_mkeyseed, bounded_100_mkey, bitstring, bitstring, mkgen, HMAC_sha1, HMAC_sha1_check, Pmac).

forall m: bitstring, k: bounded_100_mkey, r: bitstring;
((HMAC_sha1(m, k)) = r) = HMAC_sha1_check(m, k, r).

fun HMAC(bitstring, bitstring, bounded_100_mkey): bitstring.

const arithmetic1: bitstring.

(* ASSERT_DEFINITION
arithmetic1/0
"sha1"
*)

forall m: bitstring, k: bounded_100_mkey;
HMAC(arithmetic1, m, k) = HMAC_sha1(m, k).


(*************************** 
  Formatting Functions 
***************************)

(* conc1 := (7)^[u,8]|"|"|"Request"|arg0 *)
fun conc1(bounded_2000_request): bitstring [compos].

(* conc2 := (len(arg0))^[u,8]|"|"|arg0|arg1 *)
fun conc2(bounded_2000_request, bitstring): bitstring [compos].

(* conc3 := (8)^[u,8]|"|"|"Response"|(len(arg0))^[u,8]|"|"|arg0|arg1 *)
fun conc3(bounded_2000_request, bounded_2000_response): bitstring [compos].

(* conc4 := (7)^[u,8]|"|"|"Request"|arg0 *)
fun conc4(bounded_2000_request): bitstring [compos].

(* conc5 := (8)^[u,8]|"|"|"Response"|(len(arg0))^[u,8]|"|"|arg0|arg1 *)
fun conc5(bounded_2000_request, bounded_2000_response): bitstring [compos].

(* conc6 := (len(arg0))^[u,8]|"|"|arg0|arg1 *)
fun conc6(bounded_2000_response, bitstring): bitstring [compos].

(* parse1 := arg0{9, (arg0{0, 8})_[u,8]} *)
fun parse1(bitstring): bounded_2000_response.

(* parse2 := arg0{9 + (arg0{0, 8})_[u,8], len(arg0) - (9 + (arg0{0, 8})_[u,8])} *)
fun parse2(bitstring): bitstring.

(* parse3 := arg0{9, (arg0{0, 8})_[u,8]} *)
fun parse3(bitstring): bounded_2000_request.

(* parse4 := arg0{9 + (arg0{0, 8})_[u,8], len(arg0) - (9 + (arg0{0, 8})_[u,8])} *)
fun parse4(bitstring): bitstring.


forall var1: bounded_2000_request, var2: bounded_2000_response, var3: bounded_2000_request;
  conc5(var1, var2) <> conc4(var3).
forall var1: bounded_2000_request, var2: bounded_2000_response;
  conc5(var1, var2) = conc3(var1, var2).
forall var1: bounded_2000_request, var2: bounded_2000_response, var3: bounded_2000_request;
  conc5(var1, var2) <> conc1(var3).
forall var1: bounded_2000_request, var2: bounded_2000_request, var3: bounded_2000_response;
  conc4(var1) <> conc3(var2, var3).
forall var1: bounded_2000_request;
  conc4(var1) = conc1(var1).
forall var1: bounded_2000_request, var2: bounded_2000_response, var3: bounded_2000_request;
  conc3(var1, var2) <> conc1(var3).
forall var1: bitstring;
  parse4(var1) = parse2(var1).

(*************************** 
  Arithmetic Functions 
***************************)

(* arithmetic1 is already defined in the template *)

(* arithmetic2 := (((len(arg0))^[u,8] + (20)^[u,8]) + (8)^[u,8]) + (1)^[u,8] *)
fun arithmetic2(bounded_2000_response): bitstring.

(* arithmetic3 := "sha1" *)
const arithmetic3: bitstring.

(* arithmetic4 := (((len(arg0))^[u,8] + (20)^[u,8]) + (8)^[u,8]) + (1)^[u,8] *)
fun arithmetic4(bounded_2000_request): bitstring.

forall ;
  arithmetic3() = arithmetic1().

(*************************** 
  Auxiliary Tests 
***************************)

(* auxiliary1 := ¬(len(arg0) > 2147483647) *)
fun auxiliary1(bounded_100_mkey): bool.

(* auxiliary10 := len(arg0) = 112 *)
fun auxiliary10(bitstring): bool.

(* auxiliary11 := len(arg0) = 4 *)
fun auxiliary11(bitstring): bool.

(* auxiliary12 := len(arg0) = ((8)^[u,8] - (0)^[u,8])_[u,8] *)
fun auxiliary12(bitstring): bool.

(* auxiliary13 := ¬((arg0)_[u,8] > 2147483647) *)
fun auxiliary13(bitstring): bool.

(* auxiliary14 := 0 < (arg0)_[u,8] *)
fun auxiliary14(bitstring): bool.

(* auxiliary15 := len(arg0) = (arg1 - (0)^[u,8])_[u,8] *)
fun auxiliary15(bitstring, bitstring): bool.

(* auxiliary16 := ¬((arg0)_[u,8] < (8 + 1)) *)
fun auxiliary16(bitstring): bool.

(* auxiliary17 := ¬((arg0{0, 8})_[u,8] > ((arg1)_[u,8] - (8 + 1))) *)
fun auxiliary17(bitstring, bitstring): bool.

(* auxiliary18 := arg0{8, 1} = "|" *)
fun auxiliary18(bitstring): bool.

(* auxiliary19 := ¬((arg0{0, 8})_[u,8] > 2000) *)
fun auxiliary19(bitstring): bool.

(* auxiliary2 := ¬(len(arg0) > 2147483647) *)
fun auxiliary2(bounded_2000_request): bool.

(* auxiliary20 := ((arg0)_[u,8] - (8 + 1 + (arg1{0, 8})_[u,8])) = 20 *)
fun auxiliary20(bitstring, bitstring): bool.

(* auxiliary21 := 0 < (arg0{0, 8})_[u,8] *)
fun auxiliary21(bitstring): bool.

(* auxiliary22 := 1 < (arg0{0, 8})_[u,8] *)
fun auxiliary22(bitstring): bool.

(* auxiliary23 := (1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary23(bitstring): bool.

(* auxiliary24 := (1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary24(bitstring): bool.

(* auxiliary25 := (1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary25(bitstring): bool.

(* auxiliary26 := (1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary26(bitstring): bool.

(* auxiliary27 := (1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary27(bitstring): bool.

(* auxiliary28 := (1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary28(bitstring): bool.

(* auxiliary29 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary29(bitstring): bool.

(* auxiliary3 := ¬(len(arg0) > 2000) *)
fun auxiliary3(bounded_2000_request): bool.

(* auxiliary30 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary30(bitstring): bool.

(* auxiliary31 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary31(bitstring): bool.

(* auxiliary32 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary32(bitstring): bool.

(* auxiliary33 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary33(bitstring): bool.

(* auxiliary34 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary34(bitstring): bool.

(* auxiliary35 := ¬((1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8]) *)
fun auxiliary35(bitstring): bool.

(* auxiliary36 := ¬(len(arg0) > 2000) *)
fun auxiliary36(bounded_2000_response): bool.

(* auxiliary37 := ¬(len(arg0) > 2147483647) *)
fun auxiliary37(bounded_100_mkey): bool.

(* auxiliary38 := ¬(len(arg0) > 2147483647) *)
fun auxiliary38(bounded_2000_request): bool.

(* auxiliary39 := ¬(len(arg0) > 2000) *)
fun auxiliary39(bounded_2000_request): bool.

(* auxiliary4 := ¬(Ztp(arg0{0, 6}) = Ztp("client")) *)
fun auxiliary4(bitstring): bool.

(* auxiliary40 := Ztp(arg0{0, 6}) = Ztp("client") *)
fun auxiliary40(bitstring): bool.

(* auxiliary41 := len(arg0) = 112 *)
fun auxiliary41(bitstring): bool.

(* auxiliary42 := len(arg0) = 8 *)
fun auxiliary42(bitstring): bool.

(* auxiliary43 := ¬((arg0)_[s,8] <= 0) *)
fun auxiliary43(bitstring): bool.

(* auxiliary44 := 0 < len(arg0) *)
fun auxiliary44(bounded_2000_request): bool.

(* auxiliary45 := 1 < len(arg0) *)
fun auxiliary45(bounded_2000_request): bool.

(* auxiliary46 := (1 + 1) < len(arg0) *)
fun auxiliary46(bounded_2000_request): bool.

(* auxiliary47 := (1 + 1 + 1) < len(arg0) *)
fun auxiliary47(bounded_2000_request): bool.

(* auxiliary48 := (1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary48(bounded_2000_request): bool.

(* auxiliary49 := (1 + 1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary49(bounded_2000_request): bool.

(* auxiliary5 := len(arg0) = 112 *)
fun auxiliary5(bitstring): bool.

(* auxiliary50 := (1 + 1 + 1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary50(bounded_2000_request): bool.

(* auxiliary51 := (1 + 1 + 1 + 1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary51(bounded_2000_request): bool.

(* auxiliary52 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary52(bounded_2000_request): bool.

(* auxiliary53 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary53(bounded_2000_request): bool.

(* auxiliary54 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary54(bounded_2000_request): bool.

(* auxiliary55 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary55(bounded_2000_request): bool.

(* auxiliary56 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary56(bounded_2000_request): bool.

(* auxiliary57 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(arg0) *)
fun auxiliary57(bounded_2000_request): bool.

(* auxiliary58 := ¬((1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(arg0)) *)
fun auxiliary58(bounded_2000_request): bool.

(* auxiliary59 := len(arg0) = ((8)^[u,8] - (0)^[u,8])_[u,8] *)
fun auxiliary59(bitstring): bool.

(* auxiliary6 := len(arg0) = 8 *)
fun auxiliary6(bitstring): bool.

(* auxiliary60 := ¬((arg0)_[u,8] > 2147483647) *)
fun auxiliary60(bitstring): bool.

(* auxiliary61 := 0 < (arg0)_[u,8] *)
fun auxiliary61(bitstring): bool.

(* auxiliary62 := len(arg0) = (arg1 - (0)^[u,8])_[u,8] *)
fun auxiliary62(bitstring, bitstring): bool.

(* auxiliary63 := ¬((arg0)_[u,8] < (8 + 1)) *)
fun auxiliary63(bitstring): bool.

(* auxiliary64 := ¬((arg0{0, 8})_[u,8] > ((arg1)_[u,8] - (8 + 1))) *)
fun auxiliary64(bitstring, bitstring): bool.

(* auxiliary65 := arg0{8, 1} = "|" *)
fun auxiliary65(bitstring): bool.

(* auxiliary66 := ¬((arg0{0, 8})_[u,8] > 2000) *)
fun auxiliary66(bitstring): bool.

(* auxiliary67 := ((arg0)_[u,8] - (8 + 1 + (arg1{0, 8})_[u,8])) = 20 *)
fun auxiliary67(bitstring, bitstring): bool.

(* auxiliary68 := 0 < (arg0{0, 8})_[u,8] *)
fun auxiliary68(bitstring): bool.

(* auxiliary69 := 1 < (arg0{0, 8})_[u,8] *)
fun auxiliary69(bitstring): bool.

(* auxiliary7 := ¬((arg0)_[s,8] <= 0) *)
fun auxiliary7(bitstring): bool.

(* auxiliary70 := (1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary70(bitstring): bool.

(* auxiliary71 := (1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary71(bitstring): bool.

(* auxiliary72 := (1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary72(bitstring): bool.

(* auxiliary73 := (1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary73(bitstring): bool.

(* auxiliary74 := (1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary74(bitstring): bool.

(* auxiliary75 := (1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary75(bitstring): bool.

(* auxiliary76 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary76(bitstring): bool.

(* auxiliary77 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary77(bitstring): bool.

(* auxiliary78 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary78(bitstring): bool.

(* auxiliary79 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary79(bitstring): bool.

(* auxiliary8 := len(arg0) = 8 *)
fun auxiliary8(bitstring): bool.

(* auxiliary80 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary80(bitstring): bool.

(* auxiliary81 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary81(bitstring): bool.

(* auxiliary82 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary82(bitstring): bool.

(* auxiliary83 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary83(bitstring): bool.

(* auxiliary84 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary84(bitstring): bool.

(* auxiliary85 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary85(bitstring): bool.

(* auxiliary86 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary86(bitstring): bool.

(* auxiliary87 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary87(bitstring): bool.

(* auxiliary88 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary88(bitstring): bool.

(* auxiliary89 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary89(bitstring): bool.

(* auxiliary9 := ¬((arg0)_[s,8] <= 0) *)
fun auxiliary9(bitstring): bool.

(* auxiliary90 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary90(bitstring): bool.

(* auxiliary91 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary91(bitstring): bool.

(* auxiliary92 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary92(bitstring): bool.

(* auxiliary93 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary93(bitstring): bool.

(* auxiliary94 := (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8] *)
fun auxiliary94(bitstring): bool.

(* auxiliary95 := ¬((1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (arg0{0, 8})_[u,8]) *)
fun auxiliary95(bitstring): bool.


(*************************** 
  Zero Functions 
***************************)

fun Zbitstring(bitstring): bitstring.

fun Zbitstring_prime(bitstring): bitstring.

fun Zbounded_100_mkey(bounded_100_mkey): bounded_100_mkey.

fun Zbounded_100_mkey_prime(bounded_100_mkey): bounded_100_mkey.

fun Zbounded_2000_request(bounded_2000_request): bounded_2000_request.

fun Zbounded_2000_request_prime(bounded_2000_request): bounded_2000_request.

fun Zbounded_2000_response(bounded_2000_response): bounded_2000_response.

fun Zbounded_2000_response_prime(bounded_2000_response): bounded_2000_response.


(*************************** 
  Primed Functions 
***************************)

fun auxiliary8_prime(bitstring): bool.

fun auxiliary62_prime(bitstring, bitstring): bool.

fun auxiliary6_prime(bitstring): bool.

fun auxiliary59_prime(bitstring): bool.

fun auxiliary58_prime(bounded_2000_request): bool.

fun auxiliary57_prime(bounded_2000_request): bool.

fun auxiliary56_prime(bounded_2000_request): bool.

fun auxiliary55_prime(bounded_2000_request): bool.

fun auxiliary54_prime(bounded_2000_request): bool.

fun auxiliary53_prime(bounded_2000_request): bool.

fun auxiliary52_prime(bounded_2000_request): bool.

fun auxiliary51_prime(bounded_2000_request): bool.

fun auxiliary50_prime(bounded_2000_request): bool.

fun auxiliary5_prime(bitstring): bool.

fun auxiliary49_prime(bounded_2000_request): bool.

fun auxiliary48_prime(bounded_2000_request): bool.

fun auxiliary47_prime(bounded_2000_request): bool.

fun auxiliary46_prime(bounded_2000_request): bool.

fun auxiliary45_prime(bounded_2000_request): bool.

fun auxiliary44_prime(bounded_2000_request): bool.

fun auxiliary42_prime(bitstring): bool.

fun auxiliary41_prime(bitstring): bool.

fun auxiliary39_prime(bounded_2000_request): bool.

fun auxiliary38_prime(bounded_2000_request): bool.

fun auxiliary37_prime(bounded_100_mkey): bool.

fun auxiliary36_prime(bounded_2000_response): bool.

fun auxiliary3_prime(bounded_2000_request): bool.

fun auxiliary2_prime(bounded_2000_request): bool.

fun conc6_prime(bounded_2000_response, bitstring): bitstring.

fun conc5_prime(bounded_2000_request, bounded_2000_response): bitstring.

fun conc4_prime(bounded_2000_request): bitstring.

fun conc3_prime(bounded_2000_request, bounded_2000_response): bitstring.

fun conc2_prime(bounded_2000_request, bitstring): bitstring.

fun conc1_prime(bounded_2000_request): bitstring.

fun auxiliary15_prime(bitstring, bitstring): bool.

fun auxiliary12_prime(bitstring): bool.

fun auxiliary11_prime(bitstring): bool.

fun auxiliary10_prime(bitstring): bool.

fun auxiliary1_prime(bounded_100_mkey): bool.


(*************************** 
  Typecasting 
***************************)


(*************************** 
  Auxiliary Facts 
***************************)

forall x4: bitstring, x3: bounded_2000_response;
	auxiliary95(conc6(x3, x4)) = auxiliary95(conc6_prime(Zbounded_2000_response(x3), Zbitstring(x4))).
forall x6: bounded_2000_response, x5: bounded_2000_request;
	auxiliary95(conc5(x5, x6)) = auxiliary95(conc5_prime(Zbounded_2000_request(x5), Zbounded_2000_response(x6))).
forall x7: bounded_2000_request;
	auxiliary95(conc4(x7)) = auxiliary95(conc4_prime(Zbounded_2000_request(x7))).
forall x9: bounded_2000_response, x8: bounded_2000_request;
	auxiliary95(conc3(x8, x9)) = auxiliary95(conc3_prime(Zbounded_2000_request(x8), Zbounded_2000_response(x9))).
forall x11: bitstring, x10: bounded_2000_request;
	auxiliary95(conc2(x10, x11)) = auxiliary95(conc2_prime(Zbounded_2000_request(x10), Zbitstring(x11))).
forall x12: bounded_2000_request;
	auxiliary95(conc1(x12)) = auxiliary95(conc1_prime(Zbounded_2000_request(x12))).
forall x16: bitstring, x15: bounded_2000_response;
	auxiliary94(conc6(x15, x16)) = auxiliary94(conc6_prime(Zbounded_2000_response(x15), Zbitstring(x16))).
forall x18: bounded_2000_response, x17: bounded_2000_request;
	auxiliary94(conc5(x17, x18)) = auxiliary94(conc5_prime(Zbounded_2000_request(x17), Zbounded_2000_response(x18))).
forall x19: bounded_2000_request;
	auxiliary94(conc4(x19)) = auxiliary94(conc4_prime(Zbounded_2000_request(x19))).
forall x21: bounded_2000_response, x20: bounded_2000_request;
	auxiliary94(conc3(x20, x21)) = auxiliary94(conc3_prime(Zbounded_2000_request(x20), Zbounded_2000_response(x21))).
forall x23: bitstring, x22: bounded_2000_request;
	auxiliary94(conc2(x22, x23)) = auxiliary94(conc2_prime(Zbounded_2000_request(x22), Zbitstring(x23))).
forall x24: bounded_2000_request;
	auxiliary94(conc1(x24)) = auxiliary94(conc1_prime(Zbounded_2000_request(x24))).
forall x28: bitstring, x27: bounded_2000_response;
	auxiliary93(conc6(x27, x28)) = auxiliary93(conc6_prime(Zbounded_2000_response(x27), Zbitstring(x28))).
forall x30: bounded_2000_response, x29: bounded_2000_request;
	auxiliary93(conc5(x29, x30)) = auxiliary93(conc5_prime(Zbounded_2000_request(x29), Zbounded_2000_response(x30))).
forall x31: bounded_2000_request;
	auxiliary93(conc4(x31)) = auxiliary93(conc4_prime(Zbounded_2000_request(x31))).
forall x33: bounded_2000_response, x32: bounded_2000_request;
	auxiliary93(conc3(x32, x33)) = auxiliary93(conc3_prime(Zbounded_2000_request(x32), Zbounded_2000_response(x33))).
forall x35: bitstring, x34: bounded_2000_request;
	auxiliary93(conc2(x34, x35)) = auxiliary93(conc2_prime(Zbounded_2000_request(x34), Zbitstring(x35))).
forall x36: bounded_2000_request;
	auxiliary93(conc1(x36)) = auxiliary93(conc1_prime(Zbounded_2000_request(x36))).
forall x40: bitstring, x39: bounded_2000_response;
	auxiliary92(conc6(x39, x40)) = auxiliary92(conc6_prime(Zbounded_2000_response(x39), Zbitstring(x40))).
forall x42: bounded_2000_response, x41: bounded_2000_request;
	auxiliary92(conc5(x41, x42)) = auxiliary92(conc5_prime(Zbounded_2000_request(x41), Zbounded_2000_response(x42))).
forall x43: bounded_2000_request;
	auxiliary92(conc4(x43)) = auxiliary92(conc4_prime(Zbounded_2000_request(x43))).
forall x45: bounded_2000_response, x44: bounded_2000_request;
	auxiliary92(conc3(x44, x45)) = auxiliary92(conc3_prime(Zbounded_2000_request(x44), Zbounded_2000_response(x45))).
forall x47: bitstring, x46: bounded_2000_request;
	auxiliary92(conc2(x46, x47)) = auxiliary92(conc2_prime(Zbounded_2000_request(x46), Zbitstring(x47))).
forall x48: bounded_2000_request;
	auxiliary92(conc1(x48)) = auxiliary92(conc1_prime(Zbounded_2000_request(x48))).
forall x52: bitstring, x51: bounded_2000_response;
	auxiliary91(conc6(x51, x52)) = auxiliary91(conc6_prime(Zbounded_2000_response(x51), Zbitstring(x52))).
forall x54: bounded_2000_response, x53: bounded_2000_request;
	auxiliary91(conc5(x53, x54)) = auxiliary91(conc5_prime(Zbounded_2000_request(x53), Zbounded_2000_response(x54))).
forall x55: bounded_2000_request;
	auxiliary91(conc4(x55)) = auxiliary91(conc4_prime(Zbounded_2000_request(x55))).
forall x57: bounded_2000_response, x56: bounded_2000_request;
	auxiliary91(conc3(x56, x57)) = auxiliary91(conc3_prime(Zbounded_2000_request(x56), Zbounded_2000_response(x57))).
forall x59: bitstring, x58: bounded_2000_request;
	auxiliary91(conc2(x58, x59)) = auxiliary91(conc2_prime(Zbounded_2000_request(x58), Zbitstring(x59))).
forall x60: bounded_2000_request;
	auxiliary91(conc1(x60)) = auxiliary91(conc1_prime(Zbounded_2000_request(x60))).
forall x64: bitstring, x63: bounded_2000_response;
	auxiliary90(conc6(x63, x64)) = auxiliary90(conc6_prime(Zbounded_2000_response(x63), Zbitstring(x64))).
forall x66: bounded_2000_response, x65: bounded_2000_request;
	auxiliary90(conc5(x65, x66)) = auxiliary90(conc5_prime(Zbounded_2000_request(x65), Zbounded_2000_response(x66))).
forall x67: bounded_2000_request;
	auxiliary90(conc4(x67)) = auxiliary90(conc4_prime(Zbounded_2000_request(x67))).
forall x69: bounded_2000_response, x68: bounded_2000_request;
	auxiliary90(conc3(x68, x69)) = auxiliary90(conc3_prime(Zbounded_2000_request(x68), Zbounded_2000_response(x69))).
forall x71: bitstring, x70: bounded_2000_request;
	auxiliary90(conc2(x70, x71)) = auxiliary90(conc2_prime(Zbounded_2000_request(x70), Zbitstring(x71))).
forall x72: bounded_2000_request;
	auxiliary90(conc1(x72)) = auxiliary90(conc1_prime(Zbounded_2000_request(x72))).
forall x88: bitstring, x87: bounded_2000_response;
	auxiliary89(conc6(x87, x88)) = auxiliary89(conc6_prime(Zbounded_2000_response(x87), Zbitstring(x88))).
forall x90: bounded_2000_response, x89: bounded_2000_request;
	auxiliary89(conc5(x89, x90)) = auxiliary89(conc5_prime(Zbounded_2000_request(x89), Zbounded_2000_response(x90))).
forall x91: bounded_2000_request;
	auxiliary89(conc4(x91)) = auxiliary89(conc4_prime(Zbounded_2000_request(x91))).
forall x93: bounded_2000_response, x92: bounded_2000_request;
	auxiliary89(conc3(x92, x93)) = auxiliary89(conc3_prime(Zbounded_2000_request(x92), Zbounded_2000_response(x93))).
forall x95: bitstring, x94: bounded_2000_request;
	auxiliary89(conc2(x94, x95)) = auxiliary89(conc2_prime(Zbounded_2000_request(x94), Zbitstring(x95))).
forall x96: bounded_2000_request;
	auxiliary89(conc1(x96)) = auxiliary89(conc1_prime(Zbounded_2000_request(x96))).
forall x99: bounded_2000_response, x100: bitstring;
	auxiliary88(conc6(x99, x100)) = auxiliary88(conc6_prime(Zbounded_2000_response(x99), Zbitstring(x100))).
forall x102: bounded_2000_response, x101: bounded_2000_request;
	auxiliary88(conc5(x101, x102)) = auxiliary88(conc5_prime(Zbounded_2000_request(x101), Zbounded_2000_response(x102))).
forall x103: bounded_2000_request;
	auxiliary88(conc4(x103)) = auxiliary88(conc4_prime(Zbounded_2000_request(x103))).
forall x105: bounded_2000_response, x104: bounded_2000_request;
	auxiliary88(conc3(x104, x105)) = auxiliary88(conc3_prime(Zbounded_2000_request(x104), Zbounded_2000_response(x105))).
forall x107: bitstring, x106: bounded_2000_request;
	auxiliary88(conc2(x106, x107)) = auxiliary88(conc2_prime(Zbounded_2000_request(x106), Zbitstring(x107))).
forall x108: bounded_2000_request;
	auxiliary88(conc1(x108)) = auxiliary88(conc1_prime(Zbounded_2000_request(x108))).
forall x112: bitstring, x111: bounded_2000_response;
	auxiliary87(conc6(x111, x112)) = auxiliary87(conc6_prime(Zbounded_2000_response(x111), Zbitstring(x112))).
forall x114: bounded_2000_response, x113: bounded_2000_request;
	auxiliary87(conc5(x113, x114)) = auxiliary87(conc5_prime(Zbounded_2000_request(x113), Zbounded_2000_response(x114))).
forall x115: bounded_2000_request;
	auxiliary87(conc4(x115)) = auxiliary87(conc4_prime(Zbounded_2000_request(x115))).
forall x117: bounded_2000_response, x116: bounded_2000_request;
	auxiliary87(conc3(x116, x117)) = auxiliary87(conc3_prime(Zbounded_2000_request(x116), Zbounded_2000_response(x117))).
forall x119: bitstring, x118: bounded_2000_request;
	auxiliary87(conc2(x118, x119)) = auxiliary87(conc2_prime(Zbounded_2000_request(x118), Zbitstring(x119))).
forall x120: bounded_2000_request;
	auxiliary87(conc1(x120)) = auxiliary87(conc1_prime(Zbounded_2000_request(x120))).
forall x124: bitstring, x123: bounded_2000_response;
	auxiliary86(conc6(x123, x124)) = auxiliary86(conc6_prime(Zbounded_2000_response(x123), Zbitstring(x124))).
forall x126: bounded_2000_response, x125: bounded_2000_request;
	auxiliary86(conc5(x125, x126)) = auxiliary86(conc5_prime(Zbounded_2000_request(x125), Zbounded_2000_response(x126))).
forall x127: bounded_2000_request;
	auxiliary86(conc4(x127)) = auxiliary86(conc4_prime(Zbounded_2000_request(x127))).
forall x129: bounded_2000_response, x128: bounded_2000_request;
	auxiliary86(conc3(x128, x129)) = auxiliary86(conc3_prime(Zbounded_2000_request(x128), Zbounded_2000_response(x129))).
forall x131: bitstring, x130: bounded_2000_request;
	auxiliary86(conc2(x130, x131)) = auxiliary86(conc2_prime(Zbounded_2000_request(x130), Zbitstring(x131))).
forall x132: bounded_2000_request;
	auxiliary86(conc1(x132)) = auxiliary86(conc1_prime(Zbounded_2000_request(x132))).
forall x136: bitstring, x135: bounded_2000_response;
	auxiliary85(conc6(x135, x136)) = auxiliary85(conc6_prime(Zbounded_2000_response(x135), Zbitstring(x136))).
forall x138: bounded_2000_response, x137: bounded_2000_request;
	auxiliary85(conc5(x137, x138)) = auxiliary85(conc5_prime(Zbounded_2000_request(x137), Zbounded_2000_response(x138))).
forall x139: bounded_2000_request;
	auxiliary85(conc4(x139)) = auxiliary85(conc4_prime(Zbounded_2000_request(x139))).
forall x141: bounded_2000_response, x140: bounded_2000_request;
	auxiliary85(conc3(x140, x141)) = auxiliary85(conc3_prime(Zbounded_2000_request(x140), Zbounded_2000_response(x141))).
forall x143: bitstring, x142: bounded_2000_request;
	auxiliary85(conc2(x142, x143)) = auxiliary85(conc2_prime(Zbounded_2000_request(x142), Zbitstring(x143))).
forall x144: bounded_2000_request;
	auxiliary85(conc1(x144)) = auxiliary85(conc1_prime(Zbounded_2000_request(x144))).
forall x148: bitstring, x147: bounded_2000_response;
	auxiliary84(conc6(x147, x148)) = auxiliary84(conc6_prime(Zbounded_2000_response(x147), Zbitstring(x148))).
forall x150: bounded_2000_response, x149: bounded_2000_request;
	auxiliary84(conc5(x149, x150)) = auxiliary84(conc5_prime(Zbounded_2000_request(x149), Zbounded_2000_response(x150))).
forall x151: bounded_2000_request;
	auxiliary84(conc4(x151)) = auxiliary84(conc4_prime(Zbounded_2000_request(x151))).
forall x153: bounded_2000_response, x152: bounded_2000_request;
	auxiliary84(conc3(x152, x153)) = auxiliary84(conc3_prime(Zbounded_2000_request(x152), Zbounded_2000_response(x153))).
forall x155: bitstring, x154: bounded_2000_request;
	auxiliary84(conc2(x154, x155)) = auxiliary84(conc2_prime(Zbounded_2000_request(x154), Zbitstring(x155))).
forall x156: bounded_2000_request;
	auxiliary84(conc1(x156)) = auxiliary84(conc1_prime(Zbounded_2000_request(x156))).
forall x160: bitstring, x159: bounded_2000_response;
	auxiliary83(conc6(x159, x160)) = auxiliary83(conc6_prime(Zbounded_2000_response(x159), Zbitstring(x160))).
forall x162: bounded_2000_response, x161: bounded_2000_request;
	auxiliary83(conc5(x161, x162)) = auxiliary83(conc5_prime(Zbounded_2000_request(x161), Zbounded_2000_response(x162))).
forall x163: bounded_2000_request;
	auxiliary83(conc4(x163)) = auxiliary83(conc4_prime(Zbounded_2000_request(x163))).
forall x165: bounded_2000_response, x164: bounded_2000_request;
	auxiliary83(conc3(x164, x165)) = auxiliary83(conc3_prime(Zbounded_2000_request(x164), Zbounded_2000_response(x165))).
forall x167: bitstring, x166: bounded_2000_request;
	auxiliary83(conc2(x166, x167)) = auxiliary83(conc2_prime(Zbounded_2000_request(x166), Zbitstring(x167))).
forall x168: bounded_2000_request;
	auxiliary83(conc1(x168)) = auxiliary83(conc1_prime(Zbounded_2000_request(x168))).
forall x172: bitstring, x171: bounded_2000_response;
	auxiliary82(conc6(x171, x172)) = auxiliary82(conc6_prime(Zbounded_2000_response(x171), Zbitstring(x172))).
forall x174: bounded_2000_response, x173: bounded_2000_request;
	auxiliary82(conc5(x173, x174)) = auxiliary82(conc5_prime(Zbounded_2000_request(x173), Zbounded_2000_response(x174))).
forall x175: bounded_2000_request;
	auxiliary82(conc4(x175)) = auxiliary82(conc4_prime(Zbounded_2000_request(x175))).
forall x177: bounded_2000_response, x176: bounded_2000_request;
	auxiliary82(conc3(x176, x177)) = auxiliary82(conc3_prime(Zbounded_2000_request(x176), Zbounded_2000_response(x177))).
forall x179: bitstring, x178: bounded_2000_request;
	auxiliary82(conc2(x178, x179)) = auxiliary82(conc2_prime(Zbounded_2000_request(x178), Zbitstring(x179))).
forall x180: bounded_2000_request;
	auxiliary82(conc1(x180)) = auxiliary82(conc1_prime(Zbounded_2000_request(x180))).
forall x184: bitstring, x183: bounded_2000_response;
	auxiliary81(conc6(x183, x184)) = auxiliary81(conc6_prime(Zbounded_2000_response(x183), Zbitstring(x184))).
forall x186: bounded_2000_response, x185: bounded_2000_request;
	auxiliary81(conc5(x185, x186)) = auxiliary81(conc5_prime(Zbounded_2000_request(x185), Zbounded_2000_response(x186))).
forall x187: bounded_2000_request;
	auxiliary81(conc4(x187)) = auxiliary81(conc4_prime(Zbounded_2000_request(x187))).
forall x189: bounded_2000_response, x188: bounded_2000_request;
	auxiliary81(conc3(x188, x189)) = auxiliary81(conc3_prime(Zbounded_2000_request(x188), Zbounded_2000_response(x189))).
forall x191: bitstring, x190: bounded_2000_request;
	auxiliary81(conc2(x190, x191)) = auxiliary81(conc2_prime(Zbounded_2000_request(x190), Zbitstring(x191))).
forall x192: bounded_2000_request;
	auxiliary81(conc1(x192)) = auxiliary81(conc1_prime(Zbounded_2000_request(x192))).
forall x196: bitstring, x195: bounded_2000_response;
	auxiliary80(conc6(x195, x196)) = auxiliary80(conc6_prime(Zbounded_2000_response(x195), Zbitstring(x196))).
forall x198: bounded_2000_response, x197: bounded_2000_request;
	auxiliary80(conc5(x197, x198)) = auxiliary80(conc5_prime(Zbounded_2000_request(x197), Zbounded_2000_response(x198))).
forall x199: bounded_2000_request;
	auxiliary80(conc4(x199)) = auxiliary80(conc4_prime(Zbounded_2000_request(x199))).
forall x201: bounded_2000_response, x200: bounded_2000_request;
	auxiliary80(conc3(x200, x201)) = auxiliary80(conc3_prime(Zbounded_2000_request(x200), Zbounded_2000_response(x201))).
forall x203: bitstring, x202: bounded_2000_request;
	auxiliary80(conc2(x202, x203)) = auxiliary80(conc2_prime(Zbounded_2000_request(x202), Zbitstring(x203))).
forall x204: bounded_2000_request;
	auxiliary80(conc1(x204)) = auxiliary80(conc1_prime(Zbounded_2000_request(x204))).
forall arg0: bitstring;
	auxiliary8(arg0) = auxiliary8_prime(Zbitstring(arg0)).
forall x210: bitstring, x209: bounded_2000_response;
	auxiliary79(conc6(x209, x210)) = auxiliary79(conc6_prime(Zbounded_2000_response(x209), Zbitstring(x210))).
forall x212: bounded_2000_response, x211: bounded_2000_request;
	auxiliary79(conc5(x211, x212)) = auxiliary79(conc5_prime(Zbounded_2000_request(x211), Zbounded_2000_response(x212))).
forall x213: bounded_2000_request;
	auxiliary79(conc4(x213)) = auxiliary79(conc4_prime(Zbounded_2000_request(x213))).
forall x215: bounded_2000_response, x214: bounded_2000_request;
	auxiliary79(conc3(x214, x215)) = auxiliary79(conc3_prime(Zbounded_2000_request(x214), Zbounded_2000_response(x215))).
forall x217: bitstring, x216: bounded_2000_request;
	auxiliary79(conc2(x216, x217)) = auxiliary79(conc2_prime(Zbounded_2000_request(x216), Zbitstring(x217))).
forall x218: bounded_2000_request;
	auxiliary79(conc1(x218)) = auxiliary79(conc1_prime(Zbounded_2000_request(x218))).
forall x222: bitstring, x221: bounded_2000_response;
	auxiliary78(conc6(x221, x222)) = auxiliary78(conc6_prime(Zbounded_2000_response(x221), Zbitstring(x222))).
forall x224: bounded_2000_response, x223: bounded_2000_request;
	auxiliary78(conc5(x223, x224)) = auxiliary78(conc5_prime(Zbounded_2000_request(x223), Zbounded_2000_response(x224))).
forall x225: bounded_2000_request;
	auxiliary78(conc4(x225)) = auxiliary78(conc4_prime(Zbounded_2000_request(x225))).
forall x227: bounded_2000_response, x226: bounded_2000_request;
	auxiliary78(conc3(x226, x227)) = auxiliary78(conc3_prime(Zbounded_2000_request(x226), Zbounded_2000_response(x227))).
forall x229: bitstring, x228: bounded_2000_request;
	auxiliary78(conc2(x228, x229)) = auxiliary78(conc2_prime(Zbounded_2000_request(x228), Zbitstring(x229))).
forall x230: bounded_2000_request;
	auxiliary78(conc1(x230)) = auxiliary78(conc1_prime(Zbounded_2000_request(x230))).
forall x234: bitstring, x233: bounded_2000_response;
	auxiliary77(conc6(x233, x234)) = auxiliary77(conc6_prime(Zbounded_2000_response(x233), Zbitstring(x234))).
forall x236: bounded_2000_response, x235: bounded_2000_request;
	auxiliary77(conc5(x235, x236)) = auxiliary77(conc5_prime(Zbounded_2000_request(x235), Zbounded_2000_response(x236))).
forall x237: bounded_2000_request;
	auxiliary77(conc4(x237)) = auxiliary77(conc4_prime(Zbounded_2000_request(x237))).
forall x239: bounded_2000_response, x238: bounded_2000_request;
	auxiliary77(conc3(x238, x239)) = auxiliary77(conc3_prime(Zbounded_2000_request(x238), Zbounded_2000_response(x239))).
forall x241: bitstring, x240: bounded_2000_request;
	auxiliary77(conc2(x240, x241)) = auxiliary77(conc2_prime(Zbounded_2000_request(x240), Zbitstring(x241))).
forall x242: bounded_2000_request;
	auxiliary77(conc1(x242)) = auxiliary77(conc1_prime(Zbounded_2000_request(x242))).
forall x246: bitstring, x245: bounded_2000_response;
	auxiliary76(conc6(x245, x246)) = auxiliary76(conc6_prime(Zbounded_2000_response(x245), Zbitstring(x246))).
forall x248: bounded_2000_response, x247: bounded_2000_request;
	auxiliary76(conc5(x247, x248)) = auxiliary76(conc5_prime(Zbounded_2000_request(x247), Zbounded_2000_response(x248))).
forall x249: bounded_2000_request;
	auxiliary76(conc4(x249)) = auxiliary76(conc4_prime(Zbounded_2000_request(x249))).
forall x251: bounded_2000_response, x250: bounded_2000_request;
	auxiliary76(conc3(x250, x251)) = auxiliary76(conc3_prime(Zbounded_2000_request(x250), Zbounded_2000_response(x251))).
forall x253: bitstring, x252: bounded_2000_request;
	auxiliary76(conc2(x252, x253)) = auxiliary76(conc2_prime(Zbounded_2000_request(x252), Zbitstring(x253))).
forall x254: bounded_2000_request;
	auxiliary76(conc1(x254)) = auxiliary76(conc1_prime(Zbounded_2000_request(x254))).
forall x258: bitstring, x257: bounded_2000_response;
	auxiliary75(conc6(x257, x258)) = auxiliary75(conc6_prime(Zbounded_2000_response(x257), Zbitstring(x258))).
forall x260: bounded_2000_response, x259: bounded_2000_request;
	auxiliary75(conc5(x259, x260)) = auxiliary75(conc5_prime(Zbounded_2000_request(x259), Zbounded_2000_response(x260))).
forall x261: bounded_2000_request;
	auxiliary75(conc4(x261)) = auxiliary75(conc4_prime(Zbounded_2000_request(x261))).
forall x263: bounded_2000_response, x262: bounded_2000_request;
	auxiliary75(conc3(x262, x263)) = auxiliary75(conc3_prime(Zbounded_2000_request(x262), Zbounded_2000_response(x263))).
forall x265: bitstring, x264: bounded_2000_request;
	auxiliary75(conc2(x264, x265)) = auxiliary75(conc2_prime(Zbounded_2000_request(x264), Zbitstring(x265))).
forall x266: bounded_2000_request;
	auxiliary75(conc1(x266)) = auxiliary75(conc1_prime(Zbounded_2000_request(x266))).
forall x270: bitstring, x269: bounded_2000_response;
	auxiliary74(conc6(x269, x270)) = auxiliary74(conc6_prime(Zbounded_2000_response(x269), Zbitstring(x270))).
forall x272: bounded_2000_response, x271: bounded_2000_request;
	auxiliary74(conc5(x271, x272)) = auxiliary74(conc5_prime(Zbounded_2000_request(x271), Zbounded_2000_response(x272))).
forall x273: bounded_2000_request;
	auxiliary74(conc4(x273)) = auxiliary74(conc4_prime(Zbounded_2000_request(x273))).
forall x275: bounded_2000_response, x274: bounded_2000_request;
	auxiliary74(conc3(x274, x275)) = auxiliary74(conc3_prime(Zbounded_2000_request(x274), Zbounded_2000_response(x275))).
forall x277: bitstring, x276: bounded_2000_request;
	auxiliary74(conc2(x276, x277)) = auxiliary74(conc2_prime(Zbounded_2000_request(x276), Zbitstring(x277))).
forall x278: bounded_2000_request;
	auxiliary74(conc1(x278)) = auxiliary74(conc1_prime(Zbounded_2000_request(x278))).
forall x282: bitstring, x281: bounded_2000_response;
	auxiliary73(conc6(x281, x282)) = auxiliary73(conc6_prime(Zbounded_2000_response(x281), Zbitstring(x282))).
forall x284: bounded_2000_response, x283: bounded_2000_request;
	auxiliary73(conc5(x283, x284)) = auxiliary73(conc5_prime(Zbounded_2000_request(x283), Zbounded_2000_response(x284))).
forall x285: bounded_2000_request;
	auxiliary73(conc4(x285)) = auxiliary73(conc4_prime(Zbounded_2000_request(x285))).
forall x287: bounded_2000_response, x286: bounded_2000_request;
	auxiliary73(conc3(x286, x287)) = auxiliary73(conc3_prime(Zbounded_2000_request(x286), Zbounded_2000_response(x287))).
forall x289: bitstring, x288: bounded_2000_request;
	auxiliary73(conc2(x288, x289)) = auxiliary73(conc2_prime(Zbounded_2000_request(x288), Zbitstring(x289))).
forall x290: bounded_2000_request;
	auxiliary73(conc1(x290)) = auxiliary73(conc1_prime(Zbounded_2000_request(x290))).
forall x294: bitstring, x293: bounded_2000_response;
	auxiliary72(conc6(x293, x294)) = auxiliary72(conc6_prime(Zbounded_2000_response(x293), Zbitstring(x294))).
forall x296: bounded_2000_response, x295: bounded_2000_request;
	auxiliary72(conc5(x295, x296)) = auxiliary72(conc5_prime(Zbounded_2000_request(x295), Zbounded_2000_response(x296))).
forall x297: bounded_2000_request;
	auxiliary72(conc4(x297)) = auxiliary72(conc4_prime(Zbounded_2000_request(x297))).
forall x299: bounded_2000_response, x298: bounded_2000_request;
	auxiliary72(conc3(x298, x299)) = auxiliary72(conc3_prime(Zbounded_2000_request(x298), Zbounded_2000_response(x299))).
forall x301: bitstring, x300: bounded_2000_request;
	auxiliary72(conc2(x300, x301)) = auxiliary72(conc2_prime(Zbounded_2000_request(x300), Zbitstring(x301))).
forall x302: bounded_2000_request;
	auxiliary72(conc1(x302)) = auxiliary72(conc1_prime(Zbounded_2000_request(x302))).
forall x306: bitstring, x305: bounded_2000_response;
	auxiliary71(conc6(x305, x306)) = auxiliary71(conc6_prime(Zbounded_2000_response(x305), Zbitstring(x306))).
forall x308: bounded_2000_response, x307: bounded_2000_request;
	auxiliary71(conc5(x307, x308)) = auxiliary71(conc5_prime(Zbounded_2000_request(x307), Zbounded_2000_response(x308))).
forall x309: bounded_2000_request;
	auxiliary71(conc4(x309)) = auxiliary71(conc4_prime(Zbounded_2000_request(x309))).
forall x311: bounded_2000_response, x310: bounded_2000_request;
	auxiliary71(conc3(x310, x311)) = auxiliary71(conc3_prime(Zbounded_2000_request(x310), Zbounded_2000_response(x311))).
forall x313: bitstring, x312: bounded_2000_request;
	auxiliary71(conc2(x312, x313)) = auxiliary71(conc2_prime(Zbounded_2000_request(x312), Zbitstring(x313))).
forall x314: bounded_2000_request;
	auxiliary71(conc1(x314)) = auxiliary71(conc1_prime(Zbounded_2000_request(x314))).
forall x318: bitstring, x317: bounded_2000_response;
	auxiliary70(conc6(x317, x318)) = auxiliary70(conc6_prime(Zbounded_2000_response(x317), Zbitstring(x318))).
forall x320: bounded_2000_response, x319: bounded_2000_request;
	auxiliary70(conc5(x319, x320)) = auxiliary70(conc5_prime(Zbounded_2000_request(x319), Zbounded_2000_response(x320))).
forall x321: bounded_2000_request;
	auxiliary70(conc4(x321)) = auxiliary70(conc4_prime(Zbounded_2000_request(x321))).
forall x323: bounded_2000_response, x322: bounded_2000_request;
	auxiliary70(conc3(x322, x323)) = auxiliary70(conc3_prime(Zbounded_2000_request(x322), Zbounded_2000_response(x323))).
forall x325: bitstring, x324: bounded_2000_request;
	auxiliary70(conc2(x324, x325)) = auxiliary70(conc2_prime(Zbounded_2000_request(x324), Zbitstring(x325))).
forall x326: bounded_2000_request;
	auxiliary70(conc1(x326)) = auxiliary70(conc1_prime(Zbounded_2000_request(x326))).
forall x342: bitstring, x341: bounded_2000_response;
	auxiliary69(conc6(x341, x342)) = auxiliary69(conc6_prime(Zbounded_2000_response(x341), Zbitstring(x342))).
forall x344: bounded_2000_response, x343: bounded_2000_request;
	auxiliary69(conc5(x343, x344)) = auxiliary69(conc5_prime(Zbounded_2000_request(x343), Zbounded_2000_response(x344))).
forall x345: bounded_2000_request;
	auxiliary69(conc4(x345)) = auxiliary69(conc4_prime(Zbounded_2000_request(x345))).
forall x347: bounded_2000_response, x346: bounded_2000_request;
	auxiliary69(conc3(x346, x347)) = auxiliary69(conc3_prime(Zbounded_2000_request(x346), Zbounded_2000_response(x347))).
forall x349: bitstring, x348: bounded_2000_request;
	auxiliary69(conc2(x348, x349)) = auxiliary69(conc2_prime(Zbounded_2000_request(x348), Zbitstring(x349))).
forall x350: bounded_2000_request;
	auxiliary69(conc1(x350)) = auxiliary69(conc1_prime(Zbounded_2000_request(x350))).
forall x354: bitstring, x353: bounded_2000_response;
	auxiliary68(conc6(x353, x354)) = auxiliary68(conc6_prime(Zbounded_2000_response(x353), Zbitstring(x354))).
forall x356: bounded_2000_response, x355: bounded_2000_request;
	auxiliary68(conc5(x355, x356)) = auxiliary68(conc5_prime(Zbounded_2000_request(x355), Zbounded_2000_response(x356))).
forall x357: bounded_2000_request;
	auxiliary68(conc4(x357)) = auxiliary68(conc4_prime(Zbounded_2000_request(x357))).
forall x359: bounded_2000_response, x358: bounded_2000_request;
	auxiliary68(conc3(x358, x359)) = auxiliary68(conc3_prime(Zbounded_2000_request(x358), Zbounded_2000_response(x359))).
forall x361: bitstring, x360: bounded_2000_request;
	auxiliary68(conc2(x360, x361)) = auxiliary68(conc2_prime(Zbounded_2000_request(x360), Zbitstring(x361))).
forall x362: bounded_2000_request;
	auxiliary68(conc1(x362)) = auxiliary68(conc1_prime(Zbounded_2000_request(x362))).
forall x378: bitstring, x377: bounded_2000_response, arg0: bitstring;
	auxiliary67(arg0, conc6(x377, x378)) = auxiliary67(arg0, conc6_prime(Zbounded_2000_response(x377), Zbitstring(x378))).
forall x380: bounded_2000_response, x379: bounded_2000_request, arg0: bitstring;
	auxiliary67(arg0, conc5(x379, x380)) = auxiliary67(arg0, conc5_prime(Zbounded_2000_request(x379), Zbounded_2000_response(x380))).
forall x381: bounded_2000_request, arg0: bitstring;
	auxiliary67(arg0, conc4(x381)) = auxiliary67(arg0, conc4_prime(Zbounded_2000_request(x381))).
forall x383: bounded_2000_response, x382: bounded_2000_request, arg0: bitstring;
	auxiliary67(arg0, conc3(x382, x383)) = auxiliary67(arg0, conc3_prime(Zbounded_2000_request(x382), Zbounded_2000_response(x383))).
forall x385: bitstring, x384: bounded_2000_request, arg0: bitstring;
	auxiliary67(arg0, conc2(x384, x385)) = auxiliary67(arg0, conc2_prime(Zbounded_2000_request(x384), Zbitstring(x385))).
forall x386: bounded_2000_request, arg0: bitstring;
	auxiliary67(arg0, conc1(x386)) = auxiliary67(arg0, conc1_prime(Zbounded_2000_request(x386))).
forall x390: bitstring, x389: bounded_2000_response;
	auxiliary66(conc6(x389, x390)) = auxiliary66(conc6_prime(Zbounded_2000_response(x389), Zbitstring(x390))).
forall x392: bounded_2000_response, x391: bounded_2000_request;
	auxiliary66(conc5(x391, x392)) = auxiliary66(conc5_prime(Zbounded_2000_request(x391), Zbounded_2000_response(x392))).
forall x393: bounded_2000_request;
	auxiliary66(conc4(x393)) = auxiliary66(conc4_prime(Zbounded_2000_request(x393))).
forall x395: bounded_2000_response, x394: bounded_2000_request;
	auxiliary66(conc3(x394, x395)) = auxiliary66(conc3_prime(Zbounded_2000_request(x394), Zbounded_2000_response(x395))).
forall x397: bitstring, x396: bounded_2000_request;
	auxiliary66(conc2(x396, x397)) = auxiliary66(conc2_prime(Zbounded_2000_request(x396), Zbitstring(x397))).
forall x398: bounded_2000_request;
	auxiliary66(conc1(x398)) = auxiliary66(conc1_prime(Zbounded_2000_request(x398))).
forall x402: bitstring, x401: bounded_2000_response;
	auxiliary65(conc6(x401, x402)) = auxiliary65(conc6_prime(Zbounded_2000_response(x401), Zbitstring(x402))).
forall x404: bounded_2000_response, x403: bounded_2000_request;
	auxiliary65(conc5(x403, x404)) = auxiliary65(conc5_prime(Zbounded_2000_request(x403), Zbounded_2000_response(x404))).
forall x405: bounded_2000_request;
	auxiliary65(conc4(x405)) = auxiliary65(conc4_prime(Zbounded_2000_request(x405))).
forall x407: bounded_2000_response, x406: bounded_2000_request;
	auxiliary65(conc3(x406, x407)) = auxiliary65(conc3_prime(Zbounded_2000_request(x406), Zbounded_2000_response(x407))).
forall x409: bitstring, x408: bounded_2000_request;
	auxiliary65(conc2(x408, x409)) = auxiliary65(conc2_prime(Zbounded_2000_request(x408), Zbitstring(x409))).
forall x410: bounded_2000_request;
	auxiliary65(conc1(x410)) = auxiliary65(conc1_prime(Zbounded_2000_request(x410))).
forall x415: bitstring, x414: bounded_2000_response, arg1: bitstring;
	auxiliary64(conc6(x414, x415), arg1) = auxiliary64(conc6_prime(Zbounded_2000_response(x414), Zbitstring(x415)), arg1).
forall x417: bounded_2000_response, x416: bounded_2000_request, arg1: bitstring;
	auxiliary64(conc5(x416, x417), arg1) = auxiliary64(conc5_prime(Zbounded_2000_request(x416), Zbounded_2000_response(x417)), arg1).
forall x418: bounded_2000_request, arg1: bitstring;
	auxiliary64(conc4(x418), arg1) = auxiliary64(conc4_prime(Zbounded_2000_request(x418)), arg1).
forall x420: bounded_2000_response, x419: bounded_2000_request, arg1: bitstring;
	auxiliary64(conc3(x419, x420), arg1) = auxiliary64(conc3_prime(Zbounded_2000_request(x419), Zbounded_2000_response(x420)), arg1).
forall x422: bitstring, x421: bounded_2000_request, arg1: bitstring;
	auxiliary64(conc2(x421, x422), arg1) = auxiliary64(conc2_prime(Zbounded_2000_request(x421), Zbitstring(x422)), arg1).
forall x423: bounded_2000_request, arg1: bitstring;
	auxiliary64(conc1(x423), arg1) = auxiliary64(conc1_prime(Zbounded_2000_request(x423)), arg1).
forall arg1: bitstring, arg0: bitstring;
	auxiliary62(arg0, arg1) = auxiliary62_prime(Zbitstring(arg0), arg1).
forall arg0: bitstring;
	auxiliary6(arg0) = auxiliary6_prime(Zbitstring(arg0)).
forall arg0: bitstring;
	auxiliary59(arg0) = auxiliary59_prime(Zbitstring(arg0)).
forall arg0: bounded_2000_request;
	auxiliary58(arg0) = auxiliary58_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary57(arg0) = auxiliary57_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary56(arg0) = auxiliary56_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary55(arg0) = auxiliary55_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary54(arg0) = auxiliary54_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary53(arg0) = auxiliary53_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary52(arg0) = auxiliary52_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary51(arg0) = auxiliary51_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary50(arg0) = auxiliary50_prime(Zbounded_2000_request(arg0)).
forall arg0: bitstring;
	auxiliary5(arg0) = auxiliary5_prime(Zbitstring(arg0)).
forall arg0: bounded_2000_request;
	auxiliary49(arg0) = auxiliary49_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary48(arg0) = auxiliary48_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary47(arg0) = auxiliary47_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary46(arg0) = auxiliary46_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary45(arg0) = auxiliary45_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary44(arg0) = auxiliary44_prime(Zbounded_2000_request(arg0)).
forall arg0: bitstring;
	auxiliary42(arg0) = auxiliary42_prime(Zbitstring(arg0)).
forall arg0: bitstring;
	auxiliary41(arg0) = auxiliary41_prime(Zbitstring(arg0)).
forall arg0: bounded_2000_request;
	auxiliary39(arg0) = auxiliary39_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_2000_request;
	auxiliary38(arg0) = auxiliary38_prime(Zbounded_2000_request(arg0)).
forall arg0: bounded_100_mkey;
	auxiliary37(arg0) = auxiliary37_prime(Zbounded_100_mkey(arg0)).
forall arg0: bounded_2000_response;
	auxiliary36(arg0) = auxiliary36_prime(Zbounded_2000_response(arg0)).
forall x572: bitstring, x571: bounded_2000_response;
	auxiliary35(conc6(x571, x572)) = auxiliary35(conc6_prime(Zbounded_2000_response(x571), Zbitstring(x572))).
forall x574: bounded_2000_response, x573: bounded_2000_request;
	auxiliary35(conc5(x573, x574)) = auxiliary35(conc5_prime(Zbounded_2000_request(x573), Zbounded_2000_response(x574))).
forall x575: bounded_2000_request;
	auxiliary35(conc4(x575)) = auxiliary35(conc4_prime(Zbounded_2000_request(x575))).
forall x577: bounded_2000_response, x576: bounded_2000_request;
	auxiliary35(conc3(x576, x577)) = auxiliary35(conc3_prime(Zbounded_2000_request(x576), Zbounded_2000_response(x577))).
forall x579: bitstring, x578: bounded_2000_request;
	auxiliary35(conc2(x578, x579)) = auxiliary35(conc2_prime(Zbounded_2000_request(x578), Zbitstring(x579))).
forall x580: bounded_2000_request;
	auxiliary35(conc1(x580)) = auxiliary35(conc1_prime(Zbounded_2000_request(x580))).
forall x584: bitstring, x583: bounded_2000_response;
	auxiliary34(conc6(x583, x584)) = auxiliary34(conc6_prime(Zbounded_2000_response(x583), Zbitstring(x584))).
forall x586: bounded_2000_response, x585: bounded_2000_request;
	auxiliary34(conc5(x585, x586)) = auxiliary34(conc5_prime(Zbounded_2000_request(x585), Zbounded_2000_response(x586))).
forall x587: bounded_2000_request;
	auxiliary34(conc4(x587)) = auxiliary34(conc4_prime(Zbounded_2000_request(x587))).
forall x589: bounded_2000_response, x588: bounded_2000_request;
	auxiliary34(conc3(x588, x589)) = auxiliary34(conc3_prime(Zbounded_2000_request(x588), Zbounded_2000_response(x589))).
forall x591: bitstring, x590: bounded_2000_request;
	auxiliary34(conc2(x590, x591)) = auxiliary34(conc2_prime(Zbounded_2000_request(x590), Zbitstring(x591))).
forall x592: bounded_2000_request;
	auxiliary34(conc1(x592)) = auxiliary34(conc1_prime(Zbounded_2000_request(x592))).
forall x596: bitstring, x595: bounded_2000_response;
	auxiliary33(conc6(x595, x596)) = auxiliary33(conc6_prime(Zbounded_2000_response(x595), Zbitstring(x596))).
forall x598: bounded_2000_response, x597: bounded_2000_request;
	auxiliary33(conc5(x597, x598)) = auxiliary33(conc5_prime(Zbounded_2000_request(x597), Zbounded_2000_response(x598))).
forall x599: bounded_2000_request;
	auxiliary33(conc4(x599)) = auxiliary33(conc4_prime(Zbounded_2000_request(x599))).
forall x601: bounded_2000_response, x600: bounded_2000_request;
	auxiliary33(conc3(x600, x601)) = auxiliary33(conc3_prime(Zbounded_2000_request(x600), Zbounded_2000_response(x601))).
forall x603: bitstring, x602: bounded_2000_request;
	auxiliary33(conc2(x602, x603)) = auxiliary33(conc2_prime(Zbounded_2000_request(x602), Zbitstring(x603))).
forall x604: bounded_2000_request;
	auxiliary33(conc1(x604)) = auxiliary33(conc1_prime(Zbounded_2000_request(x604))).
forall x608: bitstring, x607: bounded_2000_response;
	auxiliary32(conc6(x607, x608)) = auxiliary32(conc6_prime(Zbounded_2000_response(x607), Zbitstring(x608))).
forall x610: bounded_2000_response, x609: bounded_2000_request;
	auxiliary32(conc5(x609, x610)) = auxiliary32(conc5_prime(Zbounded_2000_request(x609), Zbounded_2000_response(x610))).
forall x611: bounded_2000_request;
	auxiliary32(conc4(x611)) = auxiliary32(conc4_prime(Zbounded_2000_request(x611))).
forall x613: bounded_2000_response, x612: bounded_2000_request;
	auxiliary32(conc3(x612, x613)) = auxiliary32(conc3_prime(Zbounded_2000_request(x612), Zbounded_2000_response(x613))).
forall x615: bitstring, x614: bounded_2000_request;
	auxiliary32(conc2(x614, x615)) = auxiliary32(conc2_prime(Zbounded_2000_request(x614), Zbitstring(x615))).
forall x616: bounded_2000_request;
	auxiliary32(conc1(x616)) = auxiliary32(conc1_prime(Zbounded_2000_request(x616))).
forall x620: bitstring, x619: bounded_2000_response;
	auxiliary31(conc6(x619, x620)) = auxiliary31(conc6_prime(Zbounded_2000_response(x619), Zbitstring(x620))).
forall x622: bounded_2000_response, x621: bounded_2000_request;
	auxiliary31(conc5(x621, x622)) = auxiliary31(conc5_prime(Zbounded_2000_request(x621), Zbounded_2000_response(x622))).
forall x623: bounded_2000_request;
	auxiliary31(conc4(x623)) = auxiliary31(conc4_prime(Zbounded_2000_request(x623))).
forall x625: bounded_2000_response, x624: bounded_2000_request;
	auxiliary31(conc3(x624, x625)) = auxiliary31(conc3_prime(Zbounded_2000_request(x624), Zbounded_2000_response(x625))).
forall x627: bitstring, x626: bounded_2000_request;
	auxiliary31(conc2(x626, x627)) = auxiliary31(conc2_prime(Zbounded_2000_request(x626), Zbitstring(x627))).
forall x628: bounded_2000_request;
	auxiliary31(conc1(x628)) = auxiliary31(conc1_prime(Zbounded_2000_request(x628))).
forall x632: bitstring, x631: bounded_2000_response;
	auxiliary30(conc6(x631, x632)) = auxiliary30(conc6_prime(Zbounded_2000_response(x631), Zbitstring(x632))).
forall x634: bounded_2000_response, x633: bounded_2000_request;
	auxiliary30(conc5(x633, x634)) = auxiliary30(conc5_prime(Zbounded_2000_request(x633), Zbounded_2000_response(x634))).
forall x635: bounded_2000_request;
	auxiliary30(conc4(x635)) = auxiliary30(conc4_prime(Zbounded_2000_request(x635))).
forall x637: bounded_2000_response, x636: bounded_2000_request;
	auxiliary30(conc3(x636, x637)) = auxiliary30(conc3_prime(Zbounded_2000_request(x636), Zbounded_2000_response(x637))).
forall x639: bitstring, x638: bounded_2000_request;
	auxiliary30(conc2(x638, x639)) = auxiliary30(conc2_prime(Zbounded_2000_request(x638), Zbitstring(x639))).
forall x640: bounded_2000_request;
	auxiliary30(conc1(x640)) = auxiliary30(conc1_prime(Zbounded_2000_request(x640))).
forall arg0: bounded_2000_request;
	auxiliary3(arg0) = auxiliary3_prime(Zbounded_2000_request(arg0)).
forall x646: bitstring, x645: bounded_2000_response;
	auxiliary29(conc6(x645, x646)) = auxiliary29(conc6_prime(Zbounded_2000_response(x645), Zbitstring(x646))).
forall x648: bounded_2000_response, x647: bounded_2000_request;
	auxiliary29(conc5(x647, x648)) = auxiliary29(conc5_prime(Zbounded_2000_request(x647), Zbounded_2000_response(x648))).
forall x649: bounded_2000_request;
	auxiliary29(conc4(x649)) = auxiliary29(conc4_prime(Zbounded_2000_request(x649))).
forall x651: bounded_2000_response, x650: bounded_2000_request;
	auxiliary29(conc3(x650, x651)) = auxiliary29(conc3_prime(Zbounded_2000_request(x650), Zbounded_2000_response(x651))).
forall x653: bitstring, x652: bounded_2000_request;
	auxiliary29(conc2(x652, x653)) = auxiliary29(conc2_prime(Zbounded_2000_request(x652), Zbitstring(x653))).
forall x654: bounded_2000_request;
	auxiliary29(conc1(x654)) = auxiliary29(conc1_prime(Zbounded_2000_request(x654))).
forall x658: bitstring, x657: bounded_2000_response;
	auxiliary28(conc6(x657, x658)) = auxiliary28(conc6_prime(Zbounded_2000_response(x657), Zbitstring(x658))).
forall x660: bounded_2000_response, x659: bounded_2000_request;
	auxiliary28(conc5(x659, x660)) = auxiliary28(conc5_prime(Zbounded_2000_request(x659), Zbounded_2000_response(x660))).
forall x661: bounded_2000_request;
	auxiliary28(conc4(x661)) = auxiliary28(conc4_prime(Zbounded_2000_request(x661))).
forall x663: bounded_2000_response, x662: bounded_2000_request;
	auxiliary28(conc3(x662, x663)) = auxiliary28(conc3_prime(Zbounded_2000_request(x662), Zbounded_2000_response(x663))).
forall x665: bitstring, x664: bounded_2000_request;
	auxiliary28(conc2(x664, x665)) = auxiliary28(conc2_prime(Zbounded_2000_request(x664), Zbitstring(x665))).
forall x666: bounded_2000_request;
	auxiliary28(conc1(x666)) = auxiliary28(conc1_prime(Zbounded_2000_request(x666))).
forall x670: bitstring, x669: bounded_2000_response;
	auxiliary27(conc6(x669, x670)) = auxiliary27(conc6_prime(Zbounded_2000_response(x669), Zbitstring(x670))).
forall x672: bounded_2000_response, x671: bounded_2000_request;
	auxiliary27(conc5(x671, x672)) = auxiliary27(conc5_prime(Zbounded_2000_request(x671), Zbounded_2000_response(x672))).
forall x673: bounded_2000_request;
	auxiliary27(conc4(x673)) = auxiliary27(conc4_prime(Zbounded_2000_request(x673))).
forall x675: bounded_2000_response, x674: bounded_2000_request;
	auxiliary27(conc3(x674, x675)) = auxiliary27(conc3_prime(Zbounded_2000_request(x674), Zbounded_2000_response(x675))).
forall x677: bitstring, x676: bounded_2000_request;
	auxiliary27(conc2(x676, x677)) = auxiliary27(conc2_prime(Zbounded_2000_request(x676), Zbitstring(x677))).
forall x678: bounded_2000_request;
	auxiliary27(conc1(x678)) = auxiliary27(conc1_prime(Zbounded_2000_request(x678))).
forall x682: bitstring, x681: bounded_2000_response;
	auxiliary26(conc6(x681, x682)) = auxiliary26(conc6_prime(Zbounded_2000_response(x681), Zbitstring(x682))).
forall x684: bounded_2000_response, x683: bounded_2000_request;
	auxiliary26(conc5(x683, x684)) = auxiliary26(conc5_prime(Zbounded_2000_request(x683), Zbounded_2000_response(x684))).
forall x685: bounded_2000_request;
	auxiliary26(conc4(x685)) = auxiliary26(conc4_prime(Zbounded_2000_request(x685))).
forall x687: bounded_2000_response, x686: bounded_2000_request;
	auxiliary26(conc3(x686, x687)) = auxiliary26(conc3_prime(Zbounded_2000_request(x686), Zbounded_2000_response(x687))).
forall x689: bitstring, x688: bounded_2000_request;
	auxiliary26(conc2(x688, x689)) = auxiliary26(conc2_prime(Zbounded_2000_request(x688), Zbitstring(x689))).
forall x690: bounded_2000_request;
	auxiliary26(conc1(x690)) = auxiliary26(conc1_prime(Zbounded_2000_request(x690))).
forall x694: bitstring, x693: bounded_2000_response;
	auxiliary25(conc6(x693, x694)) = auxiliary25(conc6_prime(Zbounded_2000_response(x693), Zbitstring(x694))).
forall x696: bounded_2000_response, x695: bounded_2000_request;
	auxiliary25(conc5(x695, x696)) = auxiliary25(conc5_prime(Zbounded_2000_request(x695), Zbounded_2000_response(x696))).
forall x697: bounded_2000_request;
	auxiliary25(conc4(x697)) = auxiliary25(conc4_prime(Zbounded_2000_request(x697))).
forall x699: bounded_2000_response, x698: bounded_2000_request;
	auxiliary25(conc3(x698, x699)) = auxiliary25(conc3_prime(Zbounded_2000_request(x698), Zbounded_2000_response(x699))).
forall x701: bitstring, x700: bounded_2000_request;
	auxiliary25(conc2(x700, x701)) = auxiliary25(conc2_prime(Zbounded_2000_request(x700), Zbitstring(x701))).
forall x702: bounded_2000_request;
	auxiliary25(conc1(x702)) = auxiliary25(conc1_prime(Zbounded_2000_request(x702))).
forall x706: bitstring, x705: bounded_2000_response;
	auxiliary24(conc6(x705, x706)) = auxiliary24(conc6_prime(Zbounded_2000_response(x705), Zbitstring(x706))).
forall x708: bounded_2000_response, x707: bounded_2000_request;
	auxiliary24(conc5(x707, x708)) = auxiliary24(conc5_prime(Zbounded_2000_request(x707), Zbounded_2000_response(x708))).
forall x709: bounded_2000_request;
	auxiliary24(conc4(x709)) = auxiliary24(conc4_prime(Zbounded_2000_request(x709))).
forall x711: bounded_2000_response, x710: bounded_2000_request;
	auxiliary24(conc3(x710, x711)) = auxiliary24(conc3_prime(Zbounded_2000_request(x710), Zbounded_2000_response(x711))).
forall x713: bitstring, x712: bounded_2000_request;
	auxiliary24(conc2(x712, x713)) = auxiliary24(conc2_prime(Zbounded_2000_request(x712), Zbitstring(x713))).
forall x714: bounded_2000_request;
	auxiliary24(conc1(x714)) = auxiliary24(conc1_prime(Zbounded_2000_request(x714))).
forall x718: bitstring, x717: bounded_2000_response;
	auxiliary23(conc6(x717, x718)) = auxiliary23(conc6_prime(Zbounded_2000_response(x717), Zbitstring(x718))).
forall x720: bounded_2000_response, x719: bounded_2000_request;
	auxiliary23(conc5(x719, x720)) = auxiliary23(conc5_prime(Zbounded_2000_request(x719), Zbounded_2000_response(x720))).
forall x721: bounded_2000_request;
	auxiliary23(conc4(x721)) = auxiliary23(conc4_prime(Zbounded_2000_request(x721))).
forall x723: bounded_2000_response, x722: bounded_2000_request;
	auxiliary23(conc3(x722, x723)) = auxiliary23(conc3_prime(Zbounded_2000_request(x722), Zbounded_2000_response(x723))).
forall x725: bitstring, x724: bounded_2000_request;
	auxiliary23(conc2(x724, x725)) = auxiliary23(conc2_prime(Zbounded_2000_request(x724), Zbitstring(x725))).
forall x726: bounded_2000_request;
	auxiliary23(conc1(x726)) = auxiliary23(conc1_prime(Zbounded_2000_request(x726))).
forall x730: bitstring, x729: bounded_2000_response;
	auxiliary22(conc6(x729, x730)) = auxiliary22(conc6_prime(Zbounded_2000_response(x729), Zbitstring(x730))).
forall x732: bounded_2000_response, x731: bounded_2000_request;
	auxiliary22(conc5(x731, x732)) = auxiliary22(conc5_prime(Zbounded_2000_request(x731), Zbounded_2000_response(x732))).
forall x733: bounded_2000_request;
	auxiliary22(conc4(x733)) = auxiliary22(conc4_prime(Zbounded_2000_request(x733))).
forall x735: bounded_2000_response, x734: bounded_2000_request;
	auxiliary22(conc3(x734, x735)) = auxiliary22(conc3_prime(Zbounded_2000_request(x734), Zbounded_2000_response(x735))).
forall x737: bitstring, x736: bounded_2000_request;
	auxiliary22(conc2(x736, x737)) = auxiliary22(conc2_prime(Zbounded_2000_request(x736), Zbitstring(x737))).
forall x738: bounded_2000_request;
	auxiliary22(conc1(x738)) = auxiliary22(conc1_prime(Zbounded_2000_request(x738))).
forall x742: bitstring, x741: bounded_2000_response;
	auxiliary21(conc6(x741, x742)) = auxiliary21(conc6_prime(Zbounded_2000_response(x741), Zbitstring(x742))).
forall x744: bounded_2000_response, x743: bounded_2000_request;
	auxiliary21(conc5(x743, x744)) = auxiliary21(conc5_prime(Zbounded_2000_request(x743), Zbounded_2000_response(x744))).
forall x745: bounded_2000_request;
	auxiliary21(conc4(x745)) = auxiliary21(conc4_prime(Zbounded_2000_request(x745))).
forall x747: bounded_2000_response, x746: bounded_2000_request;
	auxiliary21(conc3(x746, x747)) = auxiliary21(conc3_prime(Zbounded_2000_request(x746), Zbounded_2000_response(x747))).
forall x749: bitstring, x748: bounded_2000_request;
	auxiliary21(conc2(x748, x749)) = auxiliary21(conc2_prime(Zbounded_2000_request(x748), Zbitstring(x749))).
forall x750: bounded_2000_request;
	auxiliary21(conc1(x750)) = auxiliary21(conc1_prime(Zbounded_2000_request(x750))).
forall x766: bitstring, x765: bounded_2000_response, arg0: bitstring;
	auxiliary20(arg0, conc6(x765, x766)) = auxiliary20(arg0, conc6_prime(Zbounded_2000_response(x765), Zbitstring(x766))).
forall x768: bounded_2000_response, x767: bounded_2000_request, arg0: bitstring;
	auxiliary20(arg0, conc5(x767, x768)) = auxiliary20(arg0, conc5_prime(Zbounded_2000_request(x767), Zbounded_2000_response(x768))).
forall x769: bounded_2000_request, arg0: bitstring;
	auxiliary20(arg0, conc4(x769)) = auxiliary20(arg0, conc4_prime(Zbounded_2000_request(x769))).
forall x771: bounded_2000_response, x770: bounded_2000_request, arg0: bitstring;
	auxiliary20(arg0, conc3(x770, x771)) = auxiliary20(arg0, conc3_prime(Zbounded_2000_request(x770), Zbounded_2000_response(x771))).
forall x773: bitstring, x772: bounded_2000_request, arg0: bitstring;
	auxiliary20(arg0, conc2(x772, x773)) = auxiliary20(arg0, conc2_prime(Zbounded_2000_request(x772), Zbitstring(x773))).
forall x774: bounded_2000_request, arg0: bitstring;
	auxiliary20(arg0, conc1(x774)) = auxiliary20(arg0, conc1_prime(Zbounded_2000_request(x774))).
forall arg0: bounded_2000_request;
	auxiliary2(arg0) = auxiliary2_prime(Zbounded_2000_request(arg0)).
forall x780: bitstring, x779: bounded_2000_response;
	auxiliary19(conc6(x779, x780)) = auxiliary19(conc6_prime(Zbounded_2000_response(x779), Zbitstring(x780))).
forall x782: bounded_2000_response, x781: bounded_2000_request;
	auxiliary19(conc5(x781, x782)) = auxiliary19(conc5_prime(Zbounded_2000_request(x781), Zbounded_2000_response(x782))).
forall x783: bounded_2000_request;
	auxiliary19(conc4(x783)) = auxiliary19(conc4_prime(Zbounded_2000_request(x783))).
forall x785: bounded_2000_response, x784: bounded_2000_request;
	auxiliary19(conc3(x784, x785)) = auxiliary19(conc3_prime(Zbounded_2000_request(x784), Zbounded_2000_response(x785))).
forall x787: bitstring, x786: bounded_2000_request;
	auxiliary19(conc2(x786, x787)) = auxiliary19(conc2_prime(Zbounded_2000_request(x786), Zbitstring(x787))).
forall x788: bounded_2000_request;
	auxiliary19(conc1(x788)) = auxiliary19(conc1_prime(Zbounded_2000_request(x788))).
forall x792: bitstring, x791: bounded_2000_response;
	auxiliary18(conc6(x791, x792)) = auxiliary18(conc6_prime(Zbounded_2000_response(x791), Zbitstring(x792))).
forall x794: bounded_2000_response, x793: bounded_2000_request;
	auxiliary18(conc5(x793, x794)) = auxiliary18(conc5_prime(Zbounded_2000_request(x793), Zbounded_2000_response(x794))).
forall x795: bounded_2000_request;
	auxiliary18(conc4(x795)) = auxiliary18(conc4_prime(Zbounded_2000_request(x795))).
forall x797: bounded_2000_response, x796: bounded_2000_request;
	auxiliary18(conc3(x796, x797)) = auxiliary18(conc3_prime(Zbounded_2000_request(x796), Zbounded_2000_response(x797))).
forall x799: bitstring, x798: bounded_2000_request;
	auxiliary18(conc2(x798, x799)) = auxiliary18(conc2_prime(Zbounded_2000_request(x798), Zbitstring(x799))).
forall x800: bounded_2000_request;
	auxiliary18(conc1(x800)) = auxiliary18(conc1_prime(Zbounded_2000_request(x800))).
forall x805: bitstring, x804: bounded_2000_response, arg1: bitstring;
	auxiliary17(conc6(x804, x805), arg1) = auxiliary17(conc6_prime(Zbounded_2000_response(x804), Zbitstring(x805)), arg1).
forall x807: bounded_2000_response, x806: bounded_2000_request, arg1: bitstring;
	auxiliary17(conc5(x806, x807), arg1) = auxiliary17(conc5_prime(Zbounded_2000_request(x806), Zbounded_2000_response(x807)), arg1).
forall x808: bounded_2000_request, arg1: bitstring;
	auxiliary17(conc4(x808), arg1) = auxiliary17(conc4_prime(Zbounded_2000_request(x808)), arg1).
forall x810: bounded_2000_response, x809: bounded_2000_request, arg1: bitstring;
	auxiliary17(conc3(x809, x810), arg1) = auxiliary17(conc3_prime(Zbounded_2000_request(x809), Zbounded_2000_response(x810)), arg1).
forall x812: bitstring, x811: bounded_2000_request, arg1: bitstring;
	auxiliary17(conc2(x811, x812), arg1) = auxiliary17(conc2_prime(Zbounded_2000_request(x811), Zbitstring(x812)), arg1).
forall x813: bounded_2000_request, arg1: bitstring;
	auxiliary17(conc1(x813), arg1) = auxiliary17(conc1_prime(Zbounded_2000_request(x813)), arg1).
forall arg1: bitstring, arg0: bitstring;
	auxiliary15(arg0, arg1) = auxiliary15_prime(Zbitstring(arg0), arg1).
forall arg0: bitstring;
	auxiliary12(arg0) = auxiliary12_prime(Zbitstring(arg0)).
forall arg0: bitstring;
	auxiliary11(arg0) = auxiliary11_prime(Zbitstring(arg0)).
forall arg0: bitstring;
	auxiliary10(arg0) = auxiliary10_prime(Zbitstring(arg0)).
forall arg0: bounded_100_mkey;
	auxiliary1(arg0) = auxiliary1_prime(Zbounded_100_mkey(arg0)).

(*************************** 
  Zero Facts 
***************************)

forall arg1: bitstring, arg0: bounded_2000_response;
	Zbitstring(conc6(arg0, arg1)) = Zbitstring_prime(conc6(Zbounded_2000_response(arg0), Zbitstring(arg1))).
forall arg1: bounded_2000_response, arg0: bounded_2000_request;
	Zbitstring(conc5(arg0, arg1)) = Zbitstring_prime(conc5(Zbounded_2000_request(arg0), Zbounded_2000_response(arg1))).
forall arg0: bounded_2000_request;
	Zbitstring(conc4(arg0)) = Zbitstring_prime(conc4(Zbounded_2000_request(arg0))).
forall arg1: bounded_2000_response, arg0: bounded_2000_request;
	Zbitstring(conc3(arg0, arg1)) = Zbitstring_prime(conc3(Zbounded_2000_request(arg0), Zbounded_2000_response(arg1))).
forall arg1: bitstring, arg0: bounded_2000_request;
	Zbitstring(conc2(arg0, arg1)) = Zbitstring_prime(conc2(Zbounded_2000_request(arg0), Zbitstring(arg1))).
forall arg0: bounded_2000_request;
	Zbitstring(conc1(arg0)) = Zbitstring_prime(conc1(Zbounded_2000_request(arg0))).

(********************
<Query>
********************)

event client_begin(bounded_2000_request).
event client_accept(bounded_2000_request, bounded_2000_response).
event server_reply(bounded_2000_request, bounded_2000_response).

query x: bounded_2000_request, y:bounded_2000_response;
event client_accept(x, y) ==> server_reply(x, y).

query x: bounded_2000_request, y:bounded_2000_response;
event server_reply(x, y) ==> client_begin(x).

(*
query x: bitstring, y:bitstring;
event client_accept(x, y).
*)


(*************************** 
  Model 
***************************)

let client = 
in(c_in, (var1: bitstring, BIO_ctrl_result1: bitstring));
if auxiliary40(argv1) then 
event client_begin(request);
if auxiliary41(var1) then 
if auxiliary42(BIO_ctrl_result1) then 
if auxiliary43(BIO_ctrl_result1) then 
let msg1 = conc1(request) in
let var27 = arithmetic3 in
let hash1 = HMAC(var27, msg1, keyAB) in
let msg2 = arithmetic4(request) in
let msg3 = conc2(request, hash1) in
new nondet1: nondet;
if auxiliary44(request) then 
new nondet2: nondet;
if auxiliary45(request) then 
new nondet3: nondet;
if auxiliary46(request) then 
new nondet4: nondet;
if auxiliary47(request) then 
new nondet5: nondet;
if auxiliary48(request) then 
new nondet6: nondet;
if auxiliary49(request) then 
new nondet7: nondet;
if auxiliary50(request) then 
new nondet8: nondet;
if auxiliary51(request) then 
new nondet9: nondet;
if auxiliary52(request) then 
new nondet10: nondet;
if auxiliary53(request) then 
new nondet11: nondet;
if auxiliary54(request) then 
new nondet12: nondet;
if auxiliary55(request) then 
new nondet13: nondet;
if auxiliary56(request) then 
new nondet14: nondet;
if auxiliary57(request) then 
new nondet15: nondet;
if auxiliary58(request) then 
new nondet16: nondet;
new nondet17: nondet;
new nondet18: nondet;
new nondet19: nondet;
new nondet20: nondet;
new nondet21: nondet;
new nondet22: nondet;
new nondet23: nondet;
new nondet24: nondet;
new nondet25: nondet;
new nondet26: nondet;
new nondet27: nondet;
new nondet28: nondet;
new nondet29: nondet;
new nondet30: nondet;
new nondet31: nondet;
new nondet32: nondet;
new nondet33: nondet;
new nondet34: nondet;
new nondet35: nondet;
new nondet36: nondet;
new nondet37: nondet;
out(c_out, (msg3, msg2));
in(c_in, (msg4: bitstring, msg5: bitstring));
if auxiliary59(msg4) then 
if auxiliary60(msg4) then 
if auxiliary61(msg4) then 
if auxiliary62(msg5, msg4) then 
if auxiliary63(msg4) then 
if auxiliary64(msg5, msg4) then 
if auxiliary65(msg5) then 
if auxiliary66(msg5) then 
let conc6(var31, var35) = msg5 in
let msg6 = conc3(request, var31) in
let hash2 = HMAC(var27, msg6, keyAB) in
if auxiliary67(msg4, msg5) then 
if var35 = hash2 then 
new nondet38: nondet;
if auxiliary68(msg5) then 
new nondet39: nondet;
if auxiliary69(msg5) then 
new nondet40: nondet;
if auxiliary70(msg5) then 
new nondet41: nondet;
if auxiliary71(msg5) then 
new nondet42: nondet;
if auxiliary72(msg5) then 
new nondet43: nondet;
if auxiliary73(msg5) then 
new nondet44: nondet;
if auxiliary74(msg5) then 
new nondet45: nondet;
if auxiliary75(msg5) then 
new nondet46: nondet;
if auxiliary76(msg5) then 
new nondet47: nondet;
if auxiliary77(msg5) then 
new nondet48: nondet;
if auxiliary78(msg5) then 
new nondet49: nondet;
if auxiliary79(msg5) then 
new nondet50: nondet;
if auxiliary80(msg5) then 
new nondet51: nondet;
if auxiliary81(msg5) then 
new nondet52: nondet;
if auxiliary82(msg5) then 
new nondet53: nondet;
if auxiliary83(msg5) then 
new nondet54: nondet;
if auxiliary84(msg5) then 
new nondet55: nondet;
if auxiliary85(msg5) then 
new nondet56: nondet;
if auxiliary86(msg5) then 
new nondet57: nondet;
if auxiliary87(msg5) then 
new nondet58: nondet;
if auxiliary88(msg5) then 
new nondet59: nondet;
if auxiliary89(msg5) then 
new nondet60: nondet;
if auxiliary90(msg5) then 
new nondet61: nondet;
if auxiliary91(msg5) then 
new nondet62: nondet;
if auxiliary92(msg5) then 
new nondet63: nondet;
if auxiliary93(msg5) then 
new nondet64: nondet;
if auxiliary94(msg5) then 
new nondet65: nondet;
if auxiliary95(msg5) then 
new nondet66: nondet;
new nondet67: nondet;
new nondet68: nondet;
new nondet69: nondet;
new nondet70: nondet;
new nondet71: nondet;
new nondet72: nondet;
new nondet73: nondet;
new nondet74: nondet;
new nondet75: nondet;
new nondet76: nondet;
new nondet77: nondet;
new nondet78: nondet;
new nondet79: nondet;
new nondet80: nondet;
new nondet81: nondet;
new nondet82: nondet;
new nondet83: nondet;
new nondet84: nondet;
new nondet85: nondet;
new nondet86: nondet;
new nondet87: nondet;
event client_accept(request, var31);
yield .

let server = 
in(c_in, (var5: bitstring, BIO_ctrl_result2: bitstring, BIO_ctrl_result3: bitstring, var8: bitstring, var9: bitstring, msg7: bitstring, msg8: bitstring));
if auxiliary4(argv1) then 
if auxiliary5(var5) then 
if auxiliary6(BIO_ctrl_result2) then 
if auxiliary7(BIO_ctrl_result2) then 
if auxiliary8(BIO_ctrl_result3) then 
if auxiliary9(BIO_ctrl_result3) then 
if auxiliary10(var8) then 
if auxiliary11(var9) then 
if auxiliary12(msg7) then 
if auxiliary13(msg7) then 
if auxiliary14(msg7) then 
if auxiliary15(msg8, msg7) then 
if auxiliary16(msg7) then 
if auxiliary17(msg8, msg7) then 
if auxiliary18(msg8) then 
if auxiliary19(msg8) then 
let conc2(var13, var17) = msg8 in
let msg9 = conc4(var13) in
let var15 = arithmetic1 in
let hash3 = HMAC(var15, msg9, keyAB) in
if auxiliary20(msg7, msg8) then 
if var17 = hash3 then 
new nondet88: nondet;
if auxiliary21(msg8) then 
new nondet89: nondet;
if auxiliary22(msg8) then 
new nondet90: nondet;
if auxiliary23(msg8) then 
new nondet91: nondet;
if auxiliary24(msg8) then 
new nondet92: nondet;
if auxiliary25(msg8) then 
new nondet93: nondet;
if auxiliary26(msg8) then 
new nondet94: nondet;
if auxiliary27(msg8) then 
new nondet95: nondet;
if auxiliary28(msg8) then 
new nondet96: nondet;
if auxiliary29(msg8) then 
new nondet97: nondet;
if auxiliary30(msg8) then 
new nondet98: nondet;
if auxiliary31(msg8) then 
new nondet99: nondet;
if auxiliary32(msg8) then 
new nondet100: nondet;
if auxiliary33(msg8) then 
new nondet101: nondet;
if auxiliary34(msg8) then 
new nondet102: nondet;
if auxiliary35(msg8) then 
new nondet103: nondet;
new nondet104: nondet;
new nondet105: nondet;
new nondet106: nondet;
new nondet107: nondet;
new nondet108: nondet;
new nondet109: nondet;
new nondet110: nondet;
new nondet111: nondet;
new nondet112: nondet;
new nondet113: nondet;
new nondet114: nondet;
new nondet115: nondet;
new nondet116: nondet;
new nondet117: nondet;
new nondet118: nondet;
new nondet119: nondet;
new nondet120: nondet;
new nondet121: nondet;
new nondet122: nondet;
new nondet123: nondet;
new nondet124: nondet;
event server_reply(var13, response);
let msg10 = conc5(var13, response) in
let hash4 = HMAC(var15, msg10, keyAB) in
let msg11 = arithmetic2(response) in
let msg12 = conc6(response, hash4) in
out(c_out, (msg12, msg11)); 0 .

(********************
<Environment>
********************)

let server' =
in(c_in, argv1: bitstring);
out(c_out, ());
server .

let client' =
in(c_in, argv1: bitstring);
out(c_out, ());
client .

process
! N (
in(c_in, (request: bounded_2000_request, response: bounded_2000_response));
new keyseed: bounded_100_mkeyseed;
let keyAB = mkgen(keyseed) in
out(c_out, ());
((! N client') | (! N server'))
)
