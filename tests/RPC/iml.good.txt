let A = 
(* main[0, <top of main>] *)
assume Defined(Ztp(argv0)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv1)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv2)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv3)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv4)) in
(* assume_intype[46, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume Defined(keyAB) in
(* assume_intype[47, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume (len(keyAB) >= 0) /\ (len(keyAB) <= ((256 * 256 * 256 * 256 * 256 * 256 * 256 * 256) - 1)) in
(* fromString[36, // ProgrammingInterface.c:94] *)
ifaux ¬(len(keyAB) > 2147483647) then 
(* assume_intype[58, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume Defined(request) in
(* assume_intype[59, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume (len(request) >= 0) /\ (len(request) <= ((256 * 256 * 256 * 256 * 256 * 256 * 256 * 256) - 1)) in
(* fromString[48, // ProgrammingInterface.c:94] *)
ifaux ¬(len(request) > 2147483647) then 
(* main[1, // RPC.c:144] *)
ifaux ¬(len(request) > 2000) then 
(* assume_len[72, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(Cmp(Ztp(argv1{0, 6}), Ztp("client"))) = 4 in
(* main[1, // RPC.c:153] *)
ifaux Ztp(argv1{0, 6}) = Ztp("client") then 
event client_begin(request);
in(c, var1);
ifaux len(var1) = 112 then 
let BIO_new_connect_result1 = var1 (* named BIO_new_connect_result1 *) in
in(c, var2);
ifaux len(var2) = 8 then 
let BIO_ctrl_result1 = var2 (* named BIO_ctrl_result1 *) in
(* socket_connect[78, // RPC_net.c:53] *)
ifaux ¬((BIO_ctrl_result1)_[s,8] <= 0) then 
let msg1 = (7)^[u,8]|"|"|"Request"|request (* named msg1 *) in
let key1 = keyAB (* named key1 *) in
let hash1 = HMAC("sha1", msg1, key1) (* named hash1 *) in
(* assume_len[155, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(hash1) = 20 in
let msg2 = (((len(request))^[u,8] + (20)^[u,8]) + (8)^[u,8]) + (1)^[u,8] (* named msg2 *) in
out(c, msg2);
let msg3 = (len(request))^[u,8]|"|"|request|hash1 (* named msg3 *) in
out(c, msg3);
new nondet1: nondet;
(* client[74, // RPC.c:34] *)
ifaux 0 < len(request) then 
new nondet2: nondet;
(* client[74, // RPC.c:34] *)
ifaux 1 < len(request) then 
new nondet3: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1) < len(request) then 
new nondet4: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1) < len(request) then 
new nondet5: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1) < len(request) then 
new nondet6: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1 + 1) < len(request) then 
new nondet7: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1) < len(request) then 
new nondet8: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1) < len(request) then 
new nondet9: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(request) then 
new nondet10: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(request) then 
new nondet11: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(request) then 
new nondet12: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(request) then 
new nondet13: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(request) then 
new nondet14: nondet;
(* client[74, // RPC.c:34] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(request) then 
new nondet15: nondet;
(* client[74, // RPC.c:34] *)
ifaux ¬((1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(request)) then 
new nondet16: nondet;
new nondet17: nondet;
new nondet18: nondet;
new nondet19: nondet;
new nondet20: nondet;
new nondet21: nondet;
new nondet22: nondet;
new nondet23: nondet;
new nondet24: nondet;
new nondet25: nondet;
new nondet26: nondet;
new nondet27: nondet;
new nondet28: nondet;
new nondet29: nondet;
new nondet30: nondet;
new nondet31: nondet;
new nondet32: nondet;
new nondet33: nondet;
new nondet34: nondet;
new nondet35: nondet;
new nondet36: nondet;
new nondet37: nondet;
in(c, var3);
ifaux len(var3) = ((8)^[u,8] - (0)^[u,8])_[u,8] then 
let msg4 = var3 (* named msg4 *) in
(* recv[190, // RPC_net.c:140] *)
ifaux ¬((msg4)_[u,8] > 2147483647) then 
(* recv[190, // RPC_net.c:153] *)
ifaux 0 < (msg4)_[u,8] then 
in(c, var4);
ifaux len(var4) = (msg4 - (0)^[u,8])_[u,8] then 
let msg5 = var4 (* named msg5 *) in
(* iconcat[201, // ProgrammingInterface.c:184] *)
ifaux ¬((msg4)_[u,8] < (8 + 1)) then 
(* iconcat[201, // ProgrammingInterface.c:196] *)
ifaux ¬((msg5{0, 8})_[u,8] > ((msg4)_[u,8] - (8 + 1))) then 
(* assume_intype[208, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume ((len(msg5) >= (8 + 1)) /\ (8 >= 0) /\ (1 >= 0)) /\ True() in
(* assume_len[209, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(Cmp(msg5{8, 1}, "|")) = 4 in
(* iconcat[201, // ProgrammingInterface.c:196] *)
ifaux msg5{8, 1} = "|" then 
(* client[74, // RPC.c:45] *)
ifaux ¬((msg5{0, 8})_[u,8] > 2000) then 
let msg6 = (8)^[u,8]|"|"|"Response"|(len(request))^[u,8]|"|"|request|msg5{9, (msg5{0, 8})_[u,8]} (* named msg6 *) in
let key2 = keyAB (* named key2 *) in
let hash2 = HMAC("sha1", msg6, key2) (* named hash2 *) in
(* assume_len[324, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(hash2) = 20 in
(* hmacsha1Verify[308, // ProgrammingInterface.c:307] *)
ifaux ((msg4)_[u,8] - (8 + 1 + (msg5{0, 8})_[u,8])) = 20 then 
(* assume_intype[329, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume ((len(msg5) >= len(msg5)) /\ ((9 + (msg5{0, 8})_[u,8]) >= 0) /\ ((len(msg5) - (9 + (msg5{0, 8})_[u,8])) >= 0)) /\ Defined(hash2) in
(* assume_len[330, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(Cmp(msg5{9 + (msg5{0, 8})_[u,8], len(msg5) - (9 + (msg5{0, 8})_[u,8])}, hash2)) = 4 in
(* hmacsha1Verify[308, // ProgrammingInterface.c:308] *)
ifeq msg5{9 + (msg5{0, 8})_[u,8], len(msg5) - (9 + (msg5{0, 8})_[u,8])} = hash2 then 
new nondet38: nondet;
(* client[74, // RPC.c:53] *)
ifaux 0 < (msg5{0, 8})_[u,8] then 
new nondet39: nondet;
(* client[74, // RPC.c:53] *)
ifaux 1 < (msg5{0, 8})_[u,8] then 
new nondet40: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet41: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet42: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet43: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet44: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet45: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet46: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet47: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet48: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet49: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet50: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet51: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet52: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet53: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet54: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet55: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet56: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet57: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet58: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet59: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet60: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet61: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet62: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet63: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet64: nondet;
(* client[74, // RPC.c:53] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8] then 
new nondet65: nondet;
(* client[74, // RPC.c:53] *)
ifaux ¬((1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg5{0, 8})_[u,8]) then 
new nondet66: nondet;
new nondet67: nondet;
new nondet68: nondet;
new nondet69: nondet;
new nondet70: nondet;
new nondet71: nondet;
new nondet72: nondet;
new nondet73: nondet;
new nondet74: nondet;
new nondet75: nondet;
new nondet76: nondet;
new nondet77: nondet;
new nondet78: nondet;
new nondet79: nondet;
new nondet80: nondet;
new nondet81: nondet;
new nondet82: nondet;
new nondet83: nondet;
new nondet84: nondet;
new nondet85: nondet;
new nondet86: nondet;
new nondet87: nondet;
event client_accept(request, msg5{9, (msg5{0, 8})_[u,8]});

let B = 
(* main[0, <top of main>] *)
assume Defined(Ztp(argv0)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv1)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv2)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv3)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv4)) in
(* assume_intype[46, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume Defined(keyAB) in
(* assume_intype[47, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume (len(keyAB) >= 0) /\ (len(keyAB) <= ((256 * 256 * 256 * 256 * 256 * 256 * 256 * 256) - 1)) in
(* fromString[36, // ProgrammingInterface.c:94] *)
ifaux ¬(len(keyAB) > 2147483647) then 
(* assume_intype[58, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume Defined(request) in
(* assume_intype[59, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume (len(request) >= 0) /\ (len(request) <= ((256 * 256 * 256 * 256 * 256 * 256 * 256 * 256) - 1)) in
(* fromString[48, // ProgrammingInterface.c:94] *)
ifaux ¬(len(request) > 2147483647) then 
(* main[1, // RPC.c:144] *)
ifaux ¬(len(request) > 2000) then 
(* assume_len[72, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(Cmp(Ztp(argv1{0, 6}), Ztp("client"))) = 4 in
(* main[1, // RPC.c:153] *)
ifaux ¬(Ztp(argv1{0, 6}) = Ztp("client")) then 
in(c, var5);
ifaux len(var5) = 112 then 
let BIO_new_accept_result1 = var5 (* named BIO_new_accept_result1 *) in
in(c, var6);
ifaux len(var6) = 8 then 
let BIO_ctrl_result2 = var6 (* named BIO_ctrl_result2 *) in
(* socket_listen[75, // RPC_net.c:23] *)
ifaux ¬((BIO_ctrl_result2)_[s,8] <= 0) then 
in(c, var7);
ifaux len(var7) = 8 then 
let BIO_ctrl_result3 = var7 (* named BIO_ctrl_result3 *) in
(* socket_listen[75, // RPC_net.c:30] *)
ifaux ¬((BIO_ctrl_result3)_[s,8] <= 0) then 
in(c, var8);
ifaux len(var8) = 112 then 
let BIO_pop_result1 = var8 (* named BIO_pop_result1 *) in
in(c, var9);
ifaux len(var9) = 4 then 
let BIO_free_result1 = var9 (* named BIO_free_result1 *) in
in(c, var10);
ifaux len(var10) = ((8)^[u,8] - (0)^[u,8])_[u,8] then 
let msg7 = var10 (* named msg7 *) in
(* recv[95, // RPC_net.c:140] *)
ifaux ¬((msg7)_[u,8] > 2147483647) then 
(* recv[95, // RPC_net.c:153] *)
ifaux 0 < (msg7)_[u,8] then 
in(c, var11);
ifaux len(var11) = (msg7 - (0)^[u,8])_[u,8] then 
let msg8 = var11 (* named msg8 *) in
(* iconcat[106, // ProgrammingInterface.c:184] *)
ifaux ¬((msg7)_[u,8] < (8 + 1)) then 
(* iconcat[106, // ProgrammingInterface.c:196] *)
ifaux ¬((msg8{0, 8})_[u,8] > ((msg7)_[u,8] - (8 + 1))) then 
(* assume_intype[113, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume ((len(msg8) >= (8 + 1)) /\ (8 >= 0) /\ (1 >= 0)) /\ True() in
(* assume_len[114, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(Cmp(msg8{8, 1}, "|")) = 4 in
(* iconcat[106, // ProgrammingInterface.c:196] *)
ifaux msg8{8, 1} = "|" then 
(* server[74, // RPC.c:80] *)
ifaux ¬((msg8{0, 8})_[u,8] > 2000) then 
let msg9 = (7)^[u,8]|"|"|"Request"|msg8{9, (msg8{0, 8})_[u,8]} (* named msg9 *) in
let key3 = keyAB (* named key3 *) in
let hash3 = HMAC("sha1", msg9, key3) (* named hash3 *) in
(* assume_len[203, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(hash3) = 20 in
(* hmacsha1Verify[187, // ProgrammingInterface.c:307] *)
ifaux ((msg7)_[u,8] - (8 + 1 + (msg8{0, 8})_[u,8])) = 20 then 
(* assume_intype[208, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume ((len(msg8) >= len(msg8)) /\ ((9 + (msg8{0, 8})_[u,8]) >= 0) /\ ((len(msg8) - (9 + (msg8{0, 8})_[u,8])) >= 0)) /\ Defined(hash3) in
(* assume_len[209, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(Cmp(msg8{9 + (msg8{0, 8})_[u,8], len(msg8) - (9 + (msg8{0, 8})_[u,8])}, hash3)) = 4 in
(* hmacsha1Verify[187, // ProgrammingInterface.c:308] *)
ifeq msg8{9 + (msg8{0, 8})_[u,8], len(msg8) - (9 + (msg8{0, 8})_[u,8])} = hash3 then 
new nondet88: nondet;
(* server[74, // RPC.c:88] *)
ifaux 0 < (msg8{0, 8})_[u,8] then 
new nondet89: nondet;
(* server[74, // RPC.c:88] *)
ifaux 1 < (msg8{0, 8})_[u,8] then 
new nondet90: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet91: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet92: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet93: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet94: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet95: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet96: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet97: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet98: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet99: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet100: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet101: nondet;
(* server[74, // RPC.c:88] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8] then 
new nondet102: nondet;
(* server[74, // RPC.c:88] *)
ifaux ¬((1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < (msg8{0, 8})_[u,8]) then 
new nondet103: nondet;
new nondet104: nondet;
new nondet105: nondet;
new nondet106: nondet;
new nondet107: nondet;
new nondet108: nondet;
new nondet109: nondet;
new nondet110: nondet;
new nondet111: nondet;
new nondet112: nondet;
new nondet113: nondet;
new nondet114: nondet;
new nondet115: nondet;
new nondet116: nondet;
new nondet117: nondet;
new nondet118: nondet;
new nondet119: nondet;
new nondet120: nondet;
new nondet121: nondet;
new nondet122: nondet;
new nondet123: nondet;
new nondet124: nondet;
(* assume_intype[274, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume Defined(response) in
(* assume_intype[275, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume (len(response) >= 0) /\ (len(response) <= ((256 * 256 * 256 * 256 * 256 * 256 * 256 * 256) - 1)) in
(* server[74, // RPC.c:100] *)
ifaux ¬(len(response) > 2000) then 
event server_reply(msg8{9, (msg8{0, 8})_[u,8]}, response);
let msg10 = (8)^[u,8]|"|"|"Response"|msg8{0, 8}|"|"|msg8{9, (msg8{0, 8})_[u,8]}|response (* named msg10 *) in
let key4 = keyAB (* named key4 *) in
let hash4 = HMAC("sha1", msg10, key4) (* named hash4 *) in
(* assume_len[374, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(hash4) = 20 in
let msg11 = (((len(response))^[u,8] + (20)^[u,8]) + (8)^[u,8]) + (1)^[u,8] (* named msg11 *) in
out(c, msg11);
let msg12 = (len(response))^[u,8]|"|"|response|hash4 (* named msg12 *) in
out(c, msg12);
new nondet125: nondet;
(* server[74, // RPC.c:112] *)
ifaux 0 < len(response) then 
new nondet126: nondet;
(* server[74, // RPC.c:112] *)
ifaux 1 < len(response) then 
new nondet127: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1) < len(response) then 
new nondet128: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1) < len(response) then 
new nondet129: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1) < len(response) then 
new nondet130: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet131: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet132: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet133: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet134: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet135: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet136: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet137: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet138: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet139: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet140: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet141: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet142: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet143: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet144: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet145: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet146: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet147: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet148: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet149: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet150: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet151: nondet;
(* server[74, // RPC.c:112] *)
ifaux (1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response) then 
new nondet152: nondet;
(* server[74, // RPC.c:112] *)
ifaux ¬((1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) < len(response)) then 
new nondet153: nondet;
new nondet154: nondet;
new nondet155: nondet;
new nondet156: nondet;
new nondet157: nondet;
new nondet158: nondet;
new nondet159: nondet;
new nondet160: nondet;
new nondet161: nondet;
new nondet162: nondet;
new nondet163: nondet;
new nondet164: nondet;
new nondet165: nondet;
new nondet166: nondet;
new nondet167: nondet;
new nondet168: nondet;
new nondet169: nondet;
new nondet170: nondet;
new nondet171: nondet;
new nondet172: nondet;
new nondet173: nondet;
new nondet174: nondet;
in(c, var12);
ifaux len(var12) = 1 then 
let msg13 = var12 (* named msg13 *) in

