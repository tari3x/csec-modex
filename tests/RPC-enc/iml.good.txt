let A = 
(* // client.c:226 *)
assume defined(ztp(argv0)) in
(* // client.c:226 *)
assume defined(ztp(argv1)) in
(* // client.c:226 *)
assume defined(ztp(argv2)) in
(* // client.c:226 *)
assume defined(ztp(argv3)) in
(* // client.c:226 *)
assume defined(ztp(argv4)) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(serverID) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(serverID))^[u,8]) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(port_ascii) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(port_ascii))^[u,8]) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/common.c:130 *)
assume ztpSafe(serverID) = serverID in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/common.c:130 *)
assume ztpSafe(port_ascii) = port_ascii in
(* // server.c:233 *)
ifaux ¬((len(serverID))^[u,4] (>= : [u,4] * [u,4] -> bool) (256)^[u,4]) then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(port) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(port) = 4 in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(socket[12]()) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(socket[12]()) = 4 in
out(c, serverID);
out(c, port);
in(c, var6);
ifaux len(var6) = 4 then 
let net_bind_result1 = var6 (* named net_bind_result1 *) in
(* // net.c:21 *)
ifaux net_bind_result1 (== : [s,4] * [s,4] -> bool) (0)^[s,4] then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(socket[13]()) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(socket[13]()) = 4 in
in(c, var7);
ifaux len(var7) = 1024 then 
let client_ip1 = var7 (* named client_ip1 *) in
in(c, var8);
ifaux len(var8) = 4 then 
let net_accept_result1 = var8 (* named net_accept_result1 *) in
(* // net.c:26 *)
ifaux net_accept_result1 (== : [s,4] * [s,4] -> bool) (0)^[s,4] then 
in(c, var9);
ifaux len(var9) = ((4)^[u,8] (- : [u,8] * [u,8] -> [u,8]) (0)^[u,8])_[u,8] then 
let msg8 = var9 (* named msg8 *) in
(* // server.c:25 *)
ifaux ¬(((CastToInt : [u,4] -> [u,8])(msg8)) (< : [u,8] * [u,8] -> bool) ((((1040)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) ((4)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (1)^[u,8])) (+ : [u,8] * [u,8] -> [u,8]) (32)^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) ((4)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (1)^[u,8]))) then 
(* // server.c:25 *)
ifaux ¬(((CastToInt : [u,4] -> [u,8])(msg8)) (> : [u,8] * [u,8] -> bool) (((((1040)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) ((4)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (1)^[u,8])) (+ : [u,8] * [u,8] -> [u,8]) (32)^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) (1024)^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) ((4)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (1)^[u,8]))) then 
in(c, var10);
ifaux len(var10) = (((CastToInt : [u,4] -> [u,8])(msg8)) (- : [u,8] * [u,8] -> [u,8]) (0)^[u,8])_[u,8] then 
let msg9 = var10 (* named msg9 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(cmp("p", msg9{0, 1})) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(cmp("p", msg9{0, 1})) = 4 in
(* // server.c:34 *)
ifaux "p" = msg9{0, 1} then 
(* // server.c:44 *)
ifaux ¬(msg9{1, 4} (> : [u,4] * [u,4] -> bool) (1024)^[u,4]) then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(fflush_ret0) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(fflush_ret0) = 4 in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(xClient) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(xClient))^[u,4]) in
(* // lib_proxy.c:108 *)
ifaux msg9{1, 4} (== : [u,4] * [u,4] -> bool) (len(xClient))^[u,4] then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(cmp(msg9{5, (msg9{1, 4})_[u,4]}, xClient)) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(cmp(msg9{5, (msg9{1, 4})_[u,4]}, xClient)) = 4 in
(* // lib_proxy.c:108 *)
ifeq msg9{5, (msg9{1, 4})_[u,4]} = xClient then 
let client2 = msg9{5, (msg9{1, 4})_[u,4]} (* named client2 *) in
let server2 = serverID (* named server2 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(lookup(client2, server2, db)) in
let kAB2 = lookup(client2, server2, db) (* named kAB2 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(kAB2))^[u,4]) in
(* // server.c:84 *)
ifaux ¬(((CastToInt : [u,4] -> [u,8])(((CastToInt : [u,8] -> [u,4])(((CastToInt : [u,4] -> [u,8])(msg8)) (- : [u,8] * [u,8] -> [u,8]) (((1)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (4)^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) ((CastToInt : [u,4] -> [u,8])(msg9{1, 4}))))) (- : [u,4] * [u,4] -> [u,4]) (32)^[u,4])) (> : [u,8] * [u,8] -> bool) ((1040)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) ((4)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (1)^[u,8]))) then 
let cipher3 = msg9{5 + (msg9{1, 4})_[u,4], len(msg9) - (5 + (msg9{1, 4})_[u,4])} (* named cipher3 *) in
let key3 = kAB2 (* named key3 *) in
let msg10 = D(cipher3, key3) (* named msg10 *) in
let msg11 = inverse_injbot(msg10) (* named msg11 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(msg11))^[u,4]) in
(* // lib_proxy.c:85 *)
ifaux ¬((len(msg11))^[u,4] (> : [u,4] * [u,4] -> bool) (((CastToInt : [u,8] -> [u,4])(((CastToInt : [u,4] -> [u,8])(msg8)) (- : [u,8] * [u,8] -> [u,8]) (((1)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (4)^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) ((CastToInt : [u,4] -> [u,8])(msg9{1, 4}))))) (- : [u,4] * [u,4] -> [u,4]) (32)^[u,4])) then 
(* // server.c:95 *)
ifaux ¬((len(msg11))^[u,8] (< : [u,8] * [u,8] -> bool) ((1)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (4)^[u,8])) then 
(* // server.c:105 *)
ifaux ¬(msg11{1, 4} (> : [u,4] * [u,4] -> bool) (1024)^[u,4]) then 
(* // server.c:105 *)
ifaux ¬(msg11{1, 4} (< : [u,4] * [u,4] -> bool) (1024)^[u,4]) then 
(* // server.c:105 *)
ifaux ¬((len(msg11))^[u,8] (<= : [u,8] * [u,8] -> bool) (((1)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (4)^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) ((CastToInt : [u,4] -> [u,8])(msg11{1, 4})))) then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(cmp("p", msg11{0, 1})) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(cmp("p", msg11{0, 1})) = 4 in
(* // server.c:115 *)
ifaux "p" = msg11{0, 1} then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(fflush_ret1) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(fflush_ret1) = 4 in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(response) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(response))^[u,4]) in
(* // lib_proxy.c:191 *)
ifaux ¬((len(response))^[u,4] (> : [u,4] * [u,4] -> bool) (1024)^[u,4]) then 
(* // lib_proxy.c:191 *)
ifaux ¬((len(response))^[u,4] (< : [u,4] * [u,4] -> bool) (1024)^[u,4]) then 
event server_reply(msg9{5, (msg9{1, 4})_[u,4]}, serverID, msg11{5, (msg11{1, 4})_[u,4]}, response);
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(fflush_ret2) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(fflush_ret2) = 4 in
(* // server.c:171 *)
ifaux ((CastToInt : [u,8] -> [u,4])((len(msg11))^[u,8] (- : [u,8] * [u,8] -> [u,8]) (((1)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (4)^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) ((CastToInt : [u,4] -> [u,8])(msg11{1, 4}))))) (== : [u,4] * [u,4] -> bool) (16)^[u,4] then 
let msg12 = response (* named msg12 *) in
let key4 = msg11{5 + (msg11{1, 4})_[u,4], len(msg11) - (5 + (msg11{1, 4})_[u,4])} (* named key4 *) in
new var11: fixed_16_seed;
let nonce2 = var11 (* named nonce2 *) in
let cipher4 = E(msg12, key4, nonce2) (* named cipher4 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(cipher4))^[u,4]) in
(* // lib_proxy.c:47 *)
ifaux ¬((len(cipher4))^[u,4] (> : [u,4] * [u,4] -> bool) ((32)^[u,4] (+ : [u,4] * [u,4] -> [u,4]) (len(response))^[u,4])) then 
(* // server.c:187 *)
ifaux ¬((len(cipher4))^[u,4] (== : [u,4] * [u,4] -> bool) (0)^[u,4]) then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(fflush_ret3) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(fflush_ret3) = 4 in
let msg13 = (len(cipher4))^[u,4] (* named msg13 *) in
out(c, msg13);
let msg14 = cipher4 (* named msg14 *) in
out(c, msg14);

let B = 
(*  *)
assume defined(ztp(argv0)) in
(*  *)
assume defined(ztp(argv1)) in
(*  *)
assume defined(ztp(argv2)) in
(*  *)
assume defined(ztp(argv3)) in
(*  *)
assume defined(ztp(argv4)) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(clientID) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(clientID))^[u,8]) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(serverID) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(serverID))^[u,8]) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(port_ascii) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(port_ascii))^[u,8]) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/common.c:130 *)
assume ztpSafe(clientID) = clientID in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/common.c:130 *)
assume ztpSafe(serverID) = serverID in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/common.c:130 *)
assume ztpSafe(port_ascii) = port_ascii in
(* // client.c:147 *)
ifaux ¬((len(clientID))^[u,8] (> : [u,8] * [u,8] -> bool) (1024)^[u,8]) then 
(* // client.c:147 *)
ifaux ¬((len(serverID))^[u,8] (> : [u,8] * [u,8] -> bool) (1024)^[u,8]) then 
(* // client.c:153 *)
ifaux ¬((len(clientID))^[u,4] (== : [u,4] * [u,4] -> bool) (0)^[u,4]) then 
(* // client.c:172 *)
ifaux ¬((len(serverID))^[u,4] (== : [u,4] * [u,4] -> bool) (0)^[u,4]) then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(port) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(port) = 4 in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(request) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(request))^[u,4]) in
(* // lib_proxy.c:173 *)
ifaux ¬((len(request))^[u,4] (> : [u,4] * [u,4] -> bool) (1024)^[u,4]) then 
(* // lib_proxy.c:173 *)
ifaux ¬((len(request))^[u,4] (< : [u,4] * [u,4] -> bool) (1024)^[u,4]) then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(fflush_ret0) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(fflush_ret0) = 4 in
out(c, serverID);
out(c, port);
in(c, var1);
ifaux len(var1) = 4 then 
let net_connect_result1 = var1 (* named net_connect_result1 *) in
(* // net.c:45 *)
ifaux net_connect_result1 (== : [s,4] * [s,4] -> bool) (0)^[s,4] then 
(* // client.c:260 *)
ifaux ¬(truth(net_connect_result1)) then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(xClient) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(xClient))^[u,4]) in
(* // lib_proxy.c:108 *)
ifaux (len(clientID))^[u,4] (== : [u,4] * [u,4] -> bool) (len(xClient))^[u,4] then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(cmp(clientID, xClient)) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(cmp(clientID, xClient)) = 4 in
(* // lib_proxy.c:108 *)
ifeq clientID = xClient then 
let client1 = clientID (* named client1 *) in
let server1 = serverID (* named server1 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(lookup(client1, server1, db)) in
let kAB1 = lookup(client1, server1, db) (* named kAB1 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(kAB1))^[u,4]) in
new var2: fixed_16_keyseed;
let kS_seed1 = var2 (* named kS_seed1 *) in
let kS1 = kgen(kS_seed1) (* named kS1 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(kS1))^[u,4]) in
(* // lib_proxy.c:143 *)
ifaux (len(kS1))^[u,4] (== : [u,4] * [u,4] -> bool) (16)^[u,4] then 
event client_begin(clientID, serverID, request);
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(fflush_ret1) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(fflush_ret1) = 4 in
let msg1 = "p"|(len(request))^[u,4]|request|kS1 (* named msg1 *) in
let key1 = kAB1 (* named key1 *) in
new var3: fixed_16_seed;
let nonce1 = var3 (* named nonce1 *) in
let cipher1 = E(msg1, key1, nonce1) (* named cipher1 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(cipher1))^[u,4]) in
(* // lib_proxy.c:47 *)
ifaux ¬((len(cipher1))^[u,4] (> : [u,4] * [u,4] -> bool) ((32)^[u,4] (+ : [u,4] * [u,4] -> [u,4]) ((CastToInt : [u,8] -> [u,4])((((CastToInt : [u,4] -> [u,8])((1)^[u,4] (+ : [u,4] * [u,4] -> [u,4]) (len(kS1))^[u,4])) (+ : [u,8] * [u,8] -> [u,8]) (4)^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) (len(request))^[u,8])))) then 
(* // client.c:57 *)
ifaux ¬((len(cipher1))^[u,4] (== : [u,4] * [u,4] -> bool) (0)^[u,4]) then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(fflush_ret2) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(fflush_ret2) = 4 in
let msg2 = (CastToInt : [u,8] -> [u,4])((((1)^[u,8] (+ : [u,8] * [u,8] -> [u,8]) (4)^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) (len(clientID))^[u,8]) (+ : [u,8] * [u,8] -> [u,8]) (len(cipher1))^[u,8]) (* named msg2 *) in
out(c, msg2);
let msg3 = "p"|(len(clientID))^[u,4]|clientID|cipher1 (* named msg3 *) in
out(c, msg3);
in(c, var4);
ifaux len(var4) = ((4)^[u,8] (- : [u,8] * [u,8] -> [u,8]) (0)^[u,8])_[u,8] then 
let msg4 = var4 (* named msg4 *) in
(* // client.c:88 *)
ifaux ¬(msg4 (< : [u,4] * [u,4] -> bool) (1056)^[u,4]) then 
(* // client.c:88 *)
ifaux ¬(msg4 (> : [u,4] * [u,4] -> bool) (1056)^[u,4]) then 
in(c, var5);
ifaux len(var5) = (((CastToInt : [u,4] -> [u,8])(msg4)) (- : [u,8] * [u,8] -> [u,8]) (0)^[u,8])_[u,8] then 
let msg5 = var5 (* named msg5 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(fflush_ret3) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(fflush_ret3) = 4 in
let cipher2 = msg5 (* named cipher2 *) in
let key2 = kS1 (* named key2 *) in
let msg6 = D(cipher2, key2) (* named msg6 *) in
let msg7 = inverse_injbot(msg6) (* named msg7 *) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined((len(msg7))^[u,4]) in
(* // lib_proxy.c:85 *)
ifaux ¬((len(msg7))^[u,4] (> : [u,4] * [u,4] -> bool) (msg4 (- : [u,4] * [u,4] -> [u,4]) (32)^[u,4])) then 
(* // client.c:117 *)
ifaux ¬((len(msg7))^[u,4] (== : [u,4] * [u,4] -> bool) (0)^[u,4]) then 
(* // client.c:123 *)
ifaux ¬((len(msg7))^[u,4] (< : [u,4] * [u,4] -> bool) (1024)^[u,4]) then 
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:25 *)
assume defined(fflush_ret4) in
(* // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:47 *)
assume len(fflush_ret4) = 4 in
event client_accept(clientID, serverID, request, msg7);

