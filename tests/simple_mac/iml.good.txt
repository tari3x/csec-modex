let A = 
(* main[0, <top of main>] *)
assume Defined(Ztp(argv0)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv1)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv2)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv3)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv4)) in
(* assume_intype[4, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume Defined(payload) in
(* assume_intype[5, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume (len(payload) >= 0) /\ (len(payload) <= ((256 * 256 * 256 * 256 * 256 * 256 * 256 * 256) - 1)) in
(* assume_intype[8, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume Defined(key) in
(* assume_intype[9, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume (len(key) >= 0) /\ (len(key) <= ((256 * 256 * 256 * 256 * 256 * 256 * 256 * 256) - 1)) in
event client_send(payload);
(* client[13, // client.c:20] *)
if ¬(len(payload) > 1000) then 
(* client[13, // client.c:21] *)
if ¬(len(key) > 1000) then 
let msg1 = (len(payload))^[u,8]|(2)^[u,1]|payload (* named msg1 *) in
let key1 = key (* named key1 *) in
let hash1 = HMAC("sha1", msg1, key1) (* named hash1 *) in
(* assume_len[29, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(hash1) = 20 in
in(c, var1);
assume Defined(var1) in
(* assume_len[36, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var1) = 112 in
let BIO_new_connect_result1 = var1 (* named BIO_new_connect_result1 *) in
in(c, var2);
assume Defined(var2) in
(* assume_len[40, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var2) = 8 in
let BIO_ctrl_result1 = var2 (* named BIO_ctrl_result1 *) in
(* socket_connect[31, // net.c:50] *)
if ¬((BIO_ctrl_result1)_[s,8] <= 0) then 
let msg2 = (((8)^[u,8] + (1)^[u,8]) + (len(payload))^[u,8]) + (20)^[u,8] (* named msg2 *) in
out(c, msg2);
let msg3 = (len(payload))^[u,8]|(1)^[u,1]|payload|hash1 (* named msg3 *) in
out(c, msg3);

let B = 
(* main[0, <top of main>] *)
assume Defined(Ztp(argv0)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv1)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv2)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv3)) in
(* main[0, <top of main>] *)
assume Defined(Ztp(argv4)) in
(* assume_intype[4, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume Defined(key) in
(* assume_intype[5, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume (len(key) >= 0) /\ (len(key) <= ((256 * 256 * 256 * 256 * 256 * 256 * 256 * 256) - 1)) in
(* server[6, // server.c:19] *)
if ¬(len(key) > 1000) then 
in(c, var3);
assume Defined(var3) in
(* assume_len[12, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var3) = 112 in
let BIO_new_accept_result1 = var3 (* named BIO_new_accept_result1 *) in
in(c, var4);
assume Defined(var4) in
(* assume_len[16, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var4) = 8 in
let BIO_ctrl_result2 = var4 (* named BIO_ctrl_result2 *) in
(* socket_listen[7, // net.c:21] *)
if ¬((BIO_ctrl_result2)_[s,8] <= 0) then 
in(c, var5);
assume Defined(var5) in
(* assume_len[20, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var5) = 8 in
let BIO_ctrl_result3 = var5 (* named BIO_ctrl_result3 *) in
(* socket_listen[7, // net.c:28] *)
if ¬((BIO_ctrl_result3)_[s,8] <= 0) then 
in(c, var6);
assume Defined(var6) in
(* assume_len[26, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var6) = 112 in
let BIO_pop_result1 = var6 (* named BIO_pop_result1 *) in
in(c, var7);
assume Defined(var7) in
(* assume_len[30, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var7) = 4 in
let BIO_free_result1 = var7 (* named BIO_free_result1 *) in
in(c, var8);
assume Defined(var8) in
(* assume_len[35, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var8) = 8 in
let msg4 = var8 (* named msg4 *) in
(* server[6, // server.c:28] *)
if ¬((msg4)_[u,8] < 8) then 
(* server[6, // server.c:29] *)
if ¬((msg4)_[u,8] > (8 + 1 + 1000 + 20)) then 
in(c, var9);
assume Defined(var9) in
(* assume_len[44, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var9) = (msg4)_[u,8] in
let msg5 = var9 (* named msg5 *) in
(* server[6, // server.c:47] *)
if ¬((msg5{0, 8})_[u,8] > 1000) then 
(* server[6, // server.c:47] *)
if ¬((8 + 1 + (msg5{0, 8})_[u,8] + 20) <> (msg4)_[u,8]) then 
(* server[6, // server.c:52] *)
if ¬((msg5{8, 1})_[u,1] <> 1) then 
let msg6 = msg5{0, 8}|(2)^[u,1]|msg5{8 + 1, (msg5{0, 8})_[u,8]} (* named msg6 *) in
let key2 = key (* named key2 *) in
let hash2 = HMAC("sha1", msg6, key2) (* named hash2 *) in
(* assume_len[61, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(hash2) = 20 in
(* assume_intype[69, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:24] *)
assume Defined(hash2) /\ ((len(msg5) >= len(msg5)) /\ ((8 + 1 + (msg5{0, 8})_[u,8]) >= 0) /\ ((len(msg5) - (8 + 1 + (msg5{0, 8})_[u,8])) >= 0)) in
(* assume_len[70, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(Cmp(hash2, msg5{8 + 1 + (msg5{0, 8})_[u,8], len(msg5) - (8 + 1 + (msg5{0, 8})_[u,8])}:fixed_20_hash)) = 4 in
(* server[6, // server.c:72] *)
ifeq hash2 = msg5{8 + 1 + (msg5{0, 8})_[u,8], len(msg5) - (8 + 1 + (msg5{0, 8})_[u,8])}:fixed_20_hash then 
event server_recv(msg5{8 + 1, (msg5{0, 8})_[u,8]});
in(c, var10);
assume Defined(var10) in
(* assume_len[77, // /home/avatar/docs/verification/svn/csec-modex/proxies/symbolic_interface.c:46] *)
assume len(var10) = 1 in
let msg7 = var10 (* named msg7 *) in

